{"version":3,"sources":["webpack:///./custom-interactions.js"],"names":["Drag","super","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","this","coordinate_","cursor_","feature_","previousCursor_","undefined","evt","const","feature","map","forEachFeatureAtPixel","pixel","coordinate","deltaX","deltaY","getGeometry","translate","element","getTargetElement","style","cursor","pointFeature","lineFeature","polygonFeature","interactions","extend","layers","source","url","features","image","anchor","anchorXUnits","anchorYUnits","opacity","src","stroke","width","color","fill","target","view","center","zoom"],"mappings":"2FAAA,wIAYMA,EAA+B,YACnC,aACEC,OAAM,MACJC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,cAAeA,IAOjBC,KAAKC,YAAc,KAMnBD,KAAKE,QAAU,UAMfF,KAAKG,SAAW,KAMhBH,KAAKI,qBAAkBC,E,gGA/BU,CAAlB,KAuCnB,SAAST,EAAgBU,GACvBC,IAEMC,EAFMF,EAAIG,IAEIC,sBAAsBJ,EAAIK,OAAO,SAAUH,GAC7D,OAAOA,KAQT,OALIA,IACFR,KAAKC,YAAcK,EAAIM,WACvBZ,KAAKG,SAAWK,KAGTA,EAMX,SAASX,EAAgBS,GACvBC,IAAMM,EAASP,EAAIM,WAAW,GAAKZ,KAAKC,YAAY,GAC9Ca,EAASR,EAAIM,WAAW,GAAKZ,KAAKC,YAAY,GAEnCD,KAAKG,SAASY,cACtBC,UAAUH,EAAQC,GAE3Bd,KAAKC,YAAY,GAAKK,EAAIM,WAAW,GACrCZ,KAAKC,YAAY,GAAKK,EAAIM,WAAW,GAMvC,SAASd,EAAgBQ,GACvB,GAAIN,KAAKE,QAAS,CAChBK,IACMC,EADMF,EAAIG,IACIC,sBAAsBJ,EAAIK,OAAO,SAAUH,GAC7D,OAAOA,KAEHS,EAAUX,EAAIG,IAAIS,mBACpBV,EACES,EAAQE,MAAMC,QAAUpB,KAAKE,UAC/BF,KAAKI,gBAAkBa,EAAQE,MAAMC,OACrCH,EAAQE,MAAMC,OAASpB,KAAKE,cAEIG,IAAzBL,KAAKI,kBACda,EAAQE,MAAMC,OAASpB,KAAKI,gBAC5BJ,KAAKI,qBAAkBC,IAQ7B,SAASN,IAGP,OAFAC,KAAKC,YAAc,KACnBD,KAAKG,SAAW,MACT,EAGTI,IAAMc,EAAe,IAAI,IAAQ,IAAI,IAAM,CAAC,EAAG,KAEzCC,EAAc,IAAI,IACtB,IAAI,IAAW,CACb,EAAE,IAAK,KACP,EAAE,IAAK,QAILC,EAAiB,IAAI,IACzB,IAAI,IAAQ,CACV,CACE,EAAE,KAAM,KACR,EAAE,IAAK,KACP,EAAE,IAAK,KACP,EAAE,KAAM,KACR,EAAE,KAAM,SAQF,IAAI,IAAI,CAClBC,aAAc,cAAsBC,OAAO,CAAC,IAAI/B,IAChDgC,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,IAAS,CACnBC,IACE,uKAIN,IAAI,IAAY,CACdD,OAAQ,IAAI,IAAa,CACvBE,SAAU,CAACR,EAAcC,EAAaC,KAExCJ,MAAO,IAAI,IAAM,CACfW,MAAO,IAAI,IAAK,CACdC,OAAQ,CAAC,GAAK,IACdC,aAAc,WACdC,aAAc,SACdC,QAAS,IACTC,IAAK,kBAEPC,OAAQ,IAAI,IAAO,CACjBC,MAAO,EACPC,MAAO,CAAC,IAAK,EAAG,EAAG,KAErBC,KAAM,IAAI,IAAK,CACbD,MAAO,CAAC,EAAG,EAAG,IAAK,WAK3BE,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,Q","file":"custom-interactions.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\r\nimport Map from '../src/ol/Map.js';\r\nimport View from '../src/ol/View.js';\r\nimport {Fill, Icon, Stroke, Style} from '../src/ol/style.js';\r\nimport {LineString, Point, Polygon} from '../src/ol/geom.js';\r\nimport {\r\n  Pointer as PointerInteraction,\r\n  defaults as defaultInteractions,\r\n} from '../src/ol/interaction.js';\r\nimport {TileJSON, Vector as VectorSource} from '../src/ol/source.js';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\r\n\r\nclass Drag extends PointerInteraction {\r\n  constructor() {\r\n    super({\r\n      handleDownEvent: handleDownEvent,\r\n      handleDragEvent: handleDragEvent,\r\n      handleMoveEvent: handleMoveEvent,\r\n      handleUpEvent: handleUpEvent,\r\n    });\r\n\r\n    /**\r\n     * @type {import(\"../src/ol/coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.coordinate_ = null;\r\n\r\n    /**\r\n     * @type {string|undefined}\r\n     * @private\r\n     */\r\n    this.cursor_ = 'pointer';\r\n\r\n    /**\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.feature_ = null;\r\n\r\n    /**\r\n     * @type {string|undefined}\r\n     * @private\r\n     */\r\n    this.previousCursor_ = undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Map browser event.\r\n * @return {boolean} `true` to start the drag sequence.\r\n */\r\nfunction handleDownEvent(evt) {\r\n  const map = evt.map;\r\n\r\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\r\n    return feature;\r\n  });\r\n\r\n  if (feature) {\r\n    this.coordinate_ = evt.coordinate;\r\n    this.feature_ = feature;\r\n  }\r\n\r\n  return !!feature;\r\n}\r\n\r\n/**\r\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Map browser event.\r\n */\r\nfunction handleDragEvent(evt) {\r\n  const deltaX = evt.coordinate[0] - this.coordinate_[0];\r\n  const deltaY = evt.coordinate[1] - this.coordinate_[1];\r\n\r\n  const geometry = this.feature_.getGeometry();\r\n  geometry.translate(deltaX, deltaY);\r\n\r\n  this.coordinate_[0] = evt.coordinate[0];\r\n  this.coordinate_[1] = evt.coordinate[1];\r\n}\r\n\r\n/**\r\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Event.\r\n */\r\nfunction handleMoveEvent(evt) {\r\n  if (this.cursor_) {\r\n    const map = evt.map;\r\n    const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\r\n      return feature;\r\n    });\r\n    const element = evt.map.getTargetElement();\r\n    if (feature) {\r\n      if (element.style.cursor != this.cursor_) {\r\n        this.previousCursor_ = element.style.cursor;\r\n        element.style.cursor = this.cursor_;\r\n      }\r\n    } else if (this.previousCursor_ !== undefined) {\r\n      element.style.cursor = this.previousCursor_;\r\n      this.previousCursor_ = undefined;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @return {boolean} `false` to stop the drag sequence.\r\n */\r\nfunction handleUpEvent() {\r\n  this.coordinate_ = null;\r\n  this.feature_ = null;\r\n  return false;\r\n}\r\n\r\nconst pointFeature = new Feature(new Point([0, 0]));\r\n\r\nconst lineFeature = new Feature(\r\n  new LineString([\r\n    [-1e7, 1e6],\r\n    [-1e6, 3e6],\r\n  ])\r\n);\r\n\r\nconst polygonFeature = new Feature(\r\n  new Polygon([\r\n    [\r\n      [-3e6, -1e6],\r\n      [-3e6, 1e6],\r\n      [-1e6, 1e6],\r\n      [-1e6, -1e6],\r\n      [-3e6, -1e6],\r\n    ],\r\n  ])\r\n);\r\n\r\nconst key =\r\n  'pk.eyJ1IjoiYWhvY2V2YXIiLCJhIjoiY2pzbmg0Nmk5MGF5NzQzbzRnbDNoeHJrbiJ9.7_-_gL8ur7ZtEiNwRfCy7Q';\r\n\r\nconst map = new Map({\r\n  interactions: defaultInteractions().extend([new Drag()]),\r\n  layers: [\r\n    new TileLayer({\r\n      source: new TileJSON({\r\n        url:\r\n          'https://a.tiles.mapbox.com/v4/aj.1x1-degrees.json?secure&access_token=' +\r\n          key,\r\n      }),\r\n    }),\r\n    new VectorLayer({\r\n      source: new VectorSource({\r\n        features: [pointFeature, lineFeature, polygonFeature],\r\n      }),\r\n      style: new Style({\r\n        image: new Icon({\r\n          anchor: [0.5, 46],\r\n          anchorXUnits: 'fraction',\r\n          anchorYUnits: 'pixels',\r\n          opacity: 0.95,\r\n          src: 'data/icon.png',\r\n        }),\r\n        stroke: new Stroke({\r\n          width: 3,\r\n          color: [255, 0, 0, 1],\r\n        }),\r\n        fill: new Fill({\r\n          color: [0, 0, 255, 0.6],\r\n        }),\r\n      }),\r\n    }),\r\n  ],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 2,\r\n  }),\r\n});\r\n"],"sourceRoot":""}