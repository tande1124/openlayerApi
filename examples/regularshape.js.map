{"version":3,"sources":["webpack:///./regularshape.js"],"names":["stroke","color","width","fill","styles","image","points","radius","angle","Math","PI","SQRT2","radius2","scale","rotation","displacement","styleKeys","features","Array","e","i","const","coordinates","random","setStyle","floor","length","source","vectorLayer","layers","target","view","center","zoom"],"mappings":"4FAAA,OA2GA,IA3GA,mFAQMA,EAAS,IAAI,IAAO,CAACC,MAAO,QAASC,MAAO,IAC5CC,EAAO,IAAI,IAAK,CAACF,MAAO,QAExBG,EAAS,CACb,OAAU,IAAI,IAAM,CAClBC,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRC,MAAOC,KAAKC,GAAK,MAGrB,UAAa,IAAI,IAAM,CACrBL,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRO,OAAQ,GAAKE,KAAKE,MAClBC,QAAS,GACTN,OAAQ,EACRE,MAAO,EACPK,MAAO,CAAC,EAAG,QAGf,SAAY,IAAI,IAAM,CACpBR,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRO,SAAUL,KAAKC,GAAK,EACpBF,MAAO,MAGX,KAAQ,IAAI,IAAM,CAChBH,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRK,QAAS,EACTJ,MAAO,MAGX,MAAS,IAAI,IAAM,CACjBH,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRK,QAAS,EACTJ,MAAO,MAGX,EAAK,IAAI,IAAM,CACbH,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRK,QAAS,EACTJ,MAAOC,KAAKC,GAAK,MAGrB,QAAW,CACT,IAAI,IAAM,CACRL,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,EACRC,MAAOC,KAAKC,GAAK,EACjBK,aAAc,CAAC,EAAG,QAGtB,IAAI,IAAM,CACRV,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRC,MAAOC,KAAKC,GAAK,QAMnBM,EAAY,CAChB,IACA,QACA,OACA,WACA,SACA,YACA,WAGIC,EAAW,IAAIC,MADP,KAERC,EAAI,KACDC,EAAI,EAAGA,EAHF,MAGeA,EAAG,CAC9BC,IAAMC,EAAc,CAAC,EAAIH,EAAIV,KAAKc,SAAWJ,EAAG,EAAIA,EAAIV,KAAKc,SAAWJ,GACxEF,EAASG,GAAK,IAAI,IAAQ,IAAI,IAAME,IACpCL,EAASG,GAAGI,SACVpB,EAAOY,EAAUP,KAAKgB,MAAMhB,KAAKc,SAAWP,EAAUU,WAI1DL,IAAMM,EAAS,IAAI,IAAa,CAC9BV,SAAUA,IAGNW,EAAc,IAAI,IAAY,CAClCD,OAAQA,IAGE,IAAI,IAAI,CAClBE,OAAQ,CAACD,GACTE,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,Q","file":"regularshape.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\r\nimport Map from '../src/ol/Map.js';\r\nimport Point from '../src/ol/geom/Point.js';\r\nimport VectorLayer from '../src/ol/layer/Vector.js';\r\nimport VectorSource from '../src/ol/source/Vector.js';\r\nimport View from '../src/ol/View.js';\r\nimport {Fill, RegularShape, Stroke, Style} from '../src/ol/style.js';\r\n\r\nconst stroke = new Stroke({color: 'black', width: 2});\r\nconst fill = new Fill({color: 'red'});\r\n\r\nconst styles = {\r\n  'square': new Style({\r\n    image: new RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      points: 4,\r\n      radius: 10,\r\n      angle: Math.PI / 4,\r\n    }),\r\n  }),\r\n  'rectangle': new Style({\r\n    image: new RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      radius: 10 / Math.SQRT2,\r\n      radius2: 10,\r\n      points: 4,\r\n      angle: 0,\r\n      scale: [1, 0.5],\r\n    }),\r\n  }),\r\n  'triangle': new Style({\r\n    image: new RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      points: 3,\r\n      radius: 10,\r\n      rotation: Math.PI / 4,\r\n      angle: 0,\r\n    }),\r\n  }),\r\n  'star': new Style({\r\n    image: new RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      points: 5,\r\n      radius: 10,\r\n      radius2: 4,\r\n      angle: 0,\r\n    }),\r\n  }),\r\n  'cross': new Style({\r\n    image: new RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      points: 4,\r\n      radius: 10,\r\n      radius2: 0,\r\n      angle: 0,\r\n    }),\r\n  }),\r\n  'x': new Style({\r\n    image: new RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      points: 4,\r\n      radius: 10,\r\n      radius2: 0,\r\n      angle: Math.PI / 4,\r\n    }),\r\n  }),\r\n  'stacked': [\r\n    new Style({\r\n      image: new RegularShape({\r\n        fill: fill,\r\n        stroke: stroke,\r\n        points: 4,\r\n        radius: 5,\r\n        angle: Math.PI / 4,\r\n        displacement: [0, 10],\r\n      }),\r\n    }),\r\n    new Style({\r\n      image: new RegularShape({\r\n        fill: fill,\r\n        stroke: stroke,\r\n        points: 4,\r\n        radius: 10,\r\n        angle: Math.PI / 4,\r\n      }),\r\n    }),\r\n  ],\r\n};\r\n\r\nconst styleKeys = [\r\n  'x',\r\n  'cross',\r\n  'star',\r\n  'triangle',\r\n  'square',\r\n  'rectangle',\r\n  'stacked',\r\n];\r\nconst count = 250;\r\nconst features = new Array(count);\r\nconst e = 4500000;\r\nfor (let i = 0; i < count; ++i) {\r\n  const coordinates = [2 * e * Math.random() - e, 2 * e * Math.random() - e];\r\n  features[i] = new Feature(new Point(coordinates));\r\n  features[i].setStyle(\r\n    styles[styleKeys[Math.floor(Math.random() * styleKeys.length)]]\r\n  );\r\n}\r\n\r\nconst source = new VectorSource({\r\n  features: features,\r\n});\r\n\r\nconst vectorLayer = new VectorLayer({\r\n  source: source,\r\n});\r\n\r\nconst map = new Map({\r\n  layers: [vectorLayer],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 2,\r\n  }),\r\n});\r\n"],"sourceRoot":""}