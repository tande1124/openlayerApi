{"version":3,"sources":["webpack:///./wmts-dimensions.js"],"names":["projection","tileSizeMtrs","getExtent","matrixIds","resolutions","i","Math","pow","const","tileGrid","origin","wmtsSource","url","layer","format","matrixSet","attributions","style","dimensions","updateSourceDimension","target","view","center","zoom","layers","source","opacity","sliderVal","updateDimensions","document","getElementById","innerHTML","addEventListener","this","value"],"mappings":"4FAAA,OAeA,IAfA,+DAUMA,EAAa,YAAc,aAE3BC,EAAe,YAASD,EAAWE,aADlB,IAEjBC,EAAY,GACZC,EAAc,GACXC,EAAI,EAAGA,GAAK,GAAIA,IACvBF,EAAUE,GAAKA,EACfD,EAAYC,GAAKJ,EAAeK,KAAKC,IAAI,EAAGF,GAE9CG,IAAMC,EAAW,IAAI,IAAa,CAChCC,OAAQ,YAAWV,EAAWE,aAC9BE,YAAaA,EACbD,UAAWA,IAKPQ,EAAa,IAAI,IAAK,CAC1BC,IAAK,6EACLC,MAAO,sCACPC,OAAQ,YACRC,UAAW,YACXC,aAAc,CACZ,0DACA,yHAIFP,SAAUA,EACVQ,MAAO,UACPC,WAAY,CACV,UAAa,OAsBXC,GAlBM,IAAI,IAAI,CAClBC,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbrB,WAAYA,EACZsB,OAAQ,EAAE,QAAS,SACnBC,KAAM,IAERC,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,MAEd,IAAI,IAAU,CACZC,QAAS,GACTD,OAAQd,OAKgB,SAAUc,EAAQE,GAC9CF,EAAOG,iBAAiB,CAAC,UAAaD,IACtCE,SAASC,eAAe,WAAWC,UAAYJ,EAAY,YAG7DR,EAAsBR,EAAY,IAElCkB,SAASC,eAAe,UAAUE,iBAAiB,SAAS,WAC1Db,EAAsBR,EAAYsB,KAAKC,Y","file":"wmts-dimensions.js","sourcesContent":["import Map from '../src/ol/Map.js';\r\nimport OSM from '../src/ol/source/OSM.js';\r\nimport TileLayer from '../src/ol/layer/Tile.js';\r\nimport View from '../src/ol/View.js';\r\nimport WMTS from '../src/ol/source/WMTS.js';\r\nimport WMTSTileGrid from '../src/ol/tilegrid/WMTS.js';\r\nimport {get as getProjection} from '../src/ol/proj.js';\r\nimport {getTopLeft, getWidth} from '../src/ol/extent.js';\r\n\r\n// create the WMTS tile grid in the google projection\r\nconst projection = getProjection('EPSG:3857');\r\nconst tileSizePixels = 256;\r\nconst tileSizeMtrs = getWidth(projection.getExtent()) / tileSizePixels;\r\nconst matrixIds = [];\r\nconst resolutions = [];\r\nfor (let i = 0; i <= 14; i++) {\r\n  matrixIds[i] = i;\r\n  resolutions[i] = tileSizeMtrs / Math.pow(2, i);\r\n}\r\nconst tileGrid = new WMTSTileGrid({\r\n  origin: getTopLeft(projection.getExtent()),\r\n  resolutions: resolutions,\r\n  matrixIds: matrixIds,\r\n});\r\n\r\nconst scalgoToken = 'CC5BF28A7D96B320C7DFBFD1236B5BEB';\r\n\r\nconst wmtsSource = new WMTS({\r\n  url: 'https://ts2.scalgo.com/olpatch/wmts?token=' + scalgoToken,\r\n  layer: 'SRTM_4_1:SRTM_4_1_flooded_sealevels',\r\n  format: 'image/png',\r\n  matrixSet: 'EPSG:3857',\r\n  attributions: [\r\n    '<a href=\"https://scalgo.com\" target=\"_blank\">SCALGO</a>',\r\n    '<a href=\"https://cgiarcsi.community/data/' +\r\n      'srtm-90m-digital-elevation-database-v4-1\"' +\r\n      ' target=\"_blank\">CGIAR-CSI SRTM</a>',\r\n  ],\r\n  tileGrid: tileGrid,\r\n  style: 'default',\r\n  dimensions: {\r\n    'threshold': 100,\r\n  },\r\n});\r\n\r\nconst map = new Map({\r\n  target: 'map',\r\n  view: new View({\r\n    projection: projection,\r\n    center: [-9871995, 3566245],\r\n    zoom: 6,\r\n  }),\r\n  layers: [\r\n    new TileLayer({\r\n      source: new OSM(),\r\n    }),\r\n    new TileLayer({\r\n      opacity: 0.5,\r\n      source: wmtsSource,\r\n    }),\r\n  ],\r\n});\r\n\r\nconst updateSourceDimension = function (source, sliderVal) {\r\n  source.updateDimensions({'threshold': sliderVal});\r\n  document.getElementById('theinfo').innerHTML = sliderVal + ' meters';\r\n};\r\n\r\nupdateSourceDimension(wmtsSource, 10);\r\n\r\ndocument.getElementById('slider').addEventListener('input', function () {\r\n  updateSourceDimension(wmtsSource, this.value);\r\n});\r\n"],"sourceRoot":""}