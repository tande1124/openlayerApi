{"version":3,"sources":["webpack:///../src/ol/format/WMSCapabilities.js","webpack:///./wms-capabilities.js"],"names":["NAMESPACE_URIS","PARSERS","node","objectStack","SERVICE_PARSERS","CAPABILITY_PARSERS","REQUEST_PARSERS","EXCEPTION_PARSERS","const","layerObject","LAYER_PARSERS","undefined","Object","assign","readLayer","super","this","version","readFromNode","getAttribute","trim","wmsCapabilityObject","readKeywordList","CONTACT_INFORMATION_PARSERS","CONTACT_PERSON_PARSERS","CONTACT_ADDRESS_PARSERS","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","extent","resolutions","ATTRIBUTION_PARSERS","authorityObject","readFormatOnlineresource","metadataObject","STYLE_PARSERS","readSizedFormatOnlineresource","readOperationType","OPERATIONTYPE_PARSERS","DCPTYPE_PARSERS","HTTP_PARSERS","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","parentLayerObject","length","let","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","forEach","key","childValue","concat","parentValue","formatOnlineresource","size","parser","fetch","then","response","text","result","read","document","getElementById","innerText","JSON","stringify"],"mappings":"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","file":"wms-capabilities.js","sourcesContent":["/**\r\n * @module ol/format/WMSCapabilities\r\n */\r\nimport XML from './XML.js';\r\nimport {\r\n  makeArrayPusher,\r\n  makeObjectPropertyPusher,\r\n  makeObjectPropertySetter,\r\n  makeStructureNS,\r\n  pushParseAndPop,\r\n} from '../xml.js';\r\nimport {\r\n  readBooleanString,\r\n  readDecimal,\r\n  readDecimalString,\r\n  readNonNegativeInteger,\r\n  readNonNegativeIntegerString,\r\n  readString,\r\n} from './xsd.js';\r\nimport {readHref} from './XLink.js';\r\n\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wms'];\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'Service': makeObjectPropertySetter(readService),\r\n  'Capability': makeObjectPropertySetter(readCapability),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'Request': makeObjectPropertySetter(readRequest),\r\n  'Exception': makeObjectPropertySetter(readException),\r\n  'Layer': makeObjectPropertySetter(readCapabilityLayer),\r\n});\r\n\r\n/**\r\n * @classdesc\r\n * Format for reading WMS capabilities data\r\n *\r\n * @api\r\n */\r\nclass WMSCapabilities extends XML {\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @type {string|undefined}\r\n     */\r\n    this.version = undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @return {Object} Object\r\n   */\r\n  readFromNode(node) {\r\n    this.version = node.getAttribute('version').trim();\r\n    const wmsCapabilityObject = pushParseAndPop(\r\n      {\r\n        'version': this.version,\r\n      },\r\n      PARSERS,\r\n      node,\r\n      []\r\n    );\r\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\r\n  }\r\n}\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'Name': makeObjectPropertySetter(readString),\r\n  'Title': makeObjectPropertySetter(readString),\r\n  'Abstract': makeObjectPropertySetter(readString),\r\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\r\n  'OnlineResource': makeObjectPropertySetter(readHref),\r\n  'ContactInformation': makeObjectPropertySetter(readContactInformation),\r\n  'Fees': makeObjectPropertySetter(readString),\r\n  'AccessConstraints': makeObjectPropertySetter(readString),\r\n  'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\r\n  'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\r\n  'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\r\n  'ContactPosition': makeObjectPropertySetter(readString),\r\n  'ContactAddress': makeObjectPropertySetter(readContactAddress),\r\n  'ContactVoiceTelephone': makeObjectPropertySetter(readString),\r\n  'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\r\n  'ContactElectronicMailAddress': makeObjectPropertySetter(readString),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'ContactPerson': makeObjectPropertySetter(readString),\r\n  'ContactOrganization': makeObjectPropertySetter(readString),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'AddressType': makeObjectPropertySetter(readString),\r\n  'Address': makeObjectPropertySetter(readString),\r\n  'City': makeObjectPropertySetter(readString),\r\n  'StateOrProvince': makeObjectPropertySetter(readString),\r\n  'PostCode': makeObjectPropertySetter(readString),\r\n  'Country': makeObjectPropertySetter(readString),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'Format': makeArrayPusher(readString),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'Name': makeObjectPropertySetter(readString),\r\n  'Title': makeObjectPropertySetter(readString),\r\n  'Abstract': makeObjectPropertySetter(readString),\r\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\r\n  'CRS': makeObjectPropertyPusher(readString),\r\n  'EX_GeographicBoundingBox': makeObjectPropertySetter(\r\n    readEXGeographicBoundingBox\r\n  ),\r\n  'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\r\n  'Dimension': makeObjectPropertyPusher(readDimension),\r\n  'Attribution': makeObjectPropertySetter(readAttribution),\r\n  'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\r\n  'Identifier': makeObjectPropertyPusher(readString),\r\n  'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\r\n  'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\r\n  'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\r\n  'Style': makeObjectPropertyPusher(readStyle),\r\n  'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\r\n  'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\r\n  'Layer': makeObjectPropertyPusher(readLayer),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'Title': makeObjectPropertySetter(readString),\r\n  'OnlineResource': makeObjectPropertySetter(readHref),\r\n  'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'westBoundLongitude': makeObjectPropertySetter(readDecimal),\r\n  'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\r\n  'southBoundLatitude': makeObjectPropertySetter(readDecimal),\r\n  'northBoundLatitude': makeObjectPropertySetter(readDecimal),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'GetCapabilities': makeObjectPropertySetter(readOperationType),\r\n  'GetMap': makeObjectPropertySetter(readOperationType),\r\n  'GetFeatureInfo': makeObjectPropertySetter(readOperationType),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'Format': makeObjectPropertyPusher(readString),\r\n  'DCPType': makeObjectPropertyPusher(readDCPType),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'HTTP': makeObjectPropertySetter(readHTTP),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'Get': makeObjectPropertySetter(readFormatOnlineresource),\r\n  'Post': makeObjectPropertySetter(readFormatOnlineresource),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'Name': makeObjectPropertySetter(readString),\r\n  'Title': makeObjectPropertySetter(readString),\r\n  'Abstract': makeObjectPropertySetter(readString),\r\n  'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\r\n  'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\r\n  'StyleURL': makeObjectPropertySetter(readFormatOnlineresource),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'Format': makeObjectPropertySetter(readString),\r\n  'OnlineResource': makeObjectPropertySetter(readHref),\r\n});\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\n// @ts-ignore\r\nconst KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n  'Keyword': makeArrayPusher(readString),\r\n});\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Attribution object.\r\n */\r\nfunction readAttribution(node, objectStack) {\r\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object} Bounding box object.\r\n */\r\nfunction readBoundingBox(node, objectStack) {\r\n  const extent = [\r\n    readDecimalString(node.getAttribute('minx')),\r\n    readDecimalString(node.getAttribute('miny')),\r\n    readDecimalString(node.getAttribute('maxx')),\r\n    readDecimalString(node.getAttribute('maxy')),\r\n  ];\r\n\r\n  const resolutions = [\r\n    readDecimalString(node.getAttribute('resx')),\r\n    readDecimalString(node.getAttribute('resy')),\r\n  ];\r\n\r\n  return {\r\n    'crs': node.getAttribute('CRS'),\r\n    'extent': extent,\r\n    'res': resolutions,\r\n  };\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\r\n */\r\nfunction readEXGeographicBoundingBox(node, objectStack) {\r\n  const geographicBoundingBox = pushParseAndPop(\r\n    {},\r\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\r\n    node,\r\n    objectStack\r\n  );\r\n  if (!geographicBoundingBox) {\r\n    return undefined;\r\n  }\r\n  const westBoundLongitude =\r\n    /** @type {number|undefined} */\r\n    (geographicBoundingBox['westBoundLongitude']);\r\n  const southBoundLatitude =\r\n    /** @type {number|undefined} */\r\n    (geographicBoundingBox['southBoundLatitude']);\r\n  const eastBoundLongitude =\r\n    /** @type {number|undefined} */\r\n    (geographicBoundingBox['eastBoundLongitude']);\r\n  const northBoundLatitude =\r\n    /** @type {number|undefined} */\r\n    (geographicBoundingBox['northBoundLatitude']);\r\n  if (\r\n    westBoundLongitude === undefined ||\r\n    southBoundLatitude === undefined ||\r\n    eastBoundLongitude === undefined ||\r\n    northBoundLatitude === undefined\r\n  ) {\r\n    return undefined;\r\n  }\r\n  return [\r\n    westBoundLongitude,\r\n    southBoundLatitude,\r\n    eastBoundLongitude,\r\n    northBoundLatitude,\r\n  ];\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Capability object.\r\n */\r\nfunction readCapability(node, objectStack) {\r\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Service object.\r\n */\r\nfunction readService(node, objectStack) {\r\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Contact information object.\r\n */\r\nfunction readContactInformation(node, objectStack) {\r\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Contact person object.\r\n */\r\nfunction readContactPersonPrimary(node, objectStack) {\r\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Contact address object.\r\n */\r\nfunction readContactAddress(node, objectStack) {\r\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<string>|undefined} Format array.\r\n */\r\nfunction readException(node, objectStack) {\r\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Layer object.\r\n */\r\nfunction readCapabilityLayer(node, objectStack) {\r\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\r\n\r\n  if (layerObject['Layer'] === undefined) {\r\n    return Object.assign(layerObject, readLayer(node, objectStack));\r\n  }\r\n\r\n  return layerObject;\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Layer object.\r\n */\r\nfunction readLayer(node, objectStack) {\r\n  const parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[\r\n    objectStack.length - 1\r\n  ]);\r\n\r\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\r\n\r\n  if (!layerObject) {\r\n    return undefined;\r\n  }\r\n  let queryable = readBooleanString(node.getAttribute('queryable'));\r\n  if (queryable === undefined) {\r\n    queryable = parentLayerObject['queryable'];\r\n  }\r\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\r\n\r\n  let cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\r\n  if (cascaded === undefined) {\r\n    cascaded = parentLayerObject['cascaded'];\r\n  }\r\n  layerObject['cascaded'] = cascaded;\r\n\r\n  let opaque = readBooleanString(node.getAttribute('opaque'));\r\n  if (opaque === undefined) {\r\n    opaque = parentLayerObject['opaque'];\r\n  }\r\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\r\n\r\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\r\n  if (noSubsets === undefined) {\r\n    noSubsets = parentLayerObject['noSubsets'];\r\n  }\r\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\r\n\r\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\r\n  if (!fixedWidth) {\r\n    fixedWidth = parentLayerObject['fixedWidth'];\r\n  }\r\n  layerObject['fixedWidth'] = fixedWidth;\r\n\r\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\r\n  if (!fixedHeight) {\r\n    fixedHeight = parentLayerObject['fixedHeight'];\r\n  }\r\n  layerObject['fixedHeight'] = fixedHeight;\r\n\r\n  // See 7.2.4.8\r\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\r\n  addKeys.forEach(function (key) {\r\n    if (key in parentLayerObject) {\r\n      const childValue = layerObject[key] || [];\r\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\r\n    }\r\n  });\r\n\r\n  const replaceKeys = [\r\n    'EX_GeographicBoundingBox',\r\n    'BoundingBox',\r\n    'Dimension',\r\n    'Attribution',\r\n    'MinScaleDenominator',\r\n    'MaxScaleDenominator',\r\n  ];\r\n  replaceKeys.forEach(function (key) {\r\n    if (!(key in layerObject)) {\r\n      const parentValue = parentLayerObject[key];\r\n      layerObject[key] = parentValue;\r\n    }\r\n  });\r\n\r\n  return layerObject;\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object} Dimension object.\r\n */\r\nfunction readDimension(node, objectStack) {\r\n  const dimensionObject = {\r\n    'name': node.getAttribute('name'),\r\n    'units': node.getAttribute('units'),\r\n    'unitSymbol': node.getAttribute('unitSymbol'),\r\n    'default': node.getAttribute('default'),\r\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\r\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\r\n    'current': readBooleanString(node.getAttribute('current')),\r\n    'values': readString(node),\r\n  };\r\n  return dimensionObject;\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Online resource object.\r\n */\r\nfunction readFormatOnlineresource(node, objectStack) {\r\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Request object.\r\n */\r\nfunction readRequest(node, objectStack) {\r\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} DCP type object.\r\n */\r\nfunction readDCPType(node, objectStack) {\r\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} HTTP object.\r\n */\r\nfunction readHTTP(node, objectStack) {\r\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Operation type object.\r\n */\r\nfunction readOperationType(node, objectStack) {\r\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Online resource object.\r\n */\r\nfunction readSizedFormatOnlineresource(node, objectStack) {\r\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\r\n  if (formatOnlineresource) {\r\n    const size = [\r\n      readNonNegativeIntegerString(node.getAttribute('width')),\r\n      readNonNegativeIntegerString(node.getAttribute('height')),\r\n    ];\r\n    formatOnlineresource['size'] = size;\r\n    return formatOnlineresource;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Authority URL object.\r\n */\r\nfunction readAuthorityURL(node, objectStack) {\r\n  const authorityObject = readFormatOnlineresource(node, objectStack);\r\n  if (authorityObject) {\r\n    authorityObject['name'] = node.getAttribute('name');\r\n    return authorityObject;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Metadata URL object.\r\n */\r\nfunction readMetadataURL(node, objectStack) {\r\n  const metadataObject = readFormatOnlineresource(node, objectStack);\r\n  if (metadataObject) {\r\n    metadataObject['type'] = node.getAttribute('type');\r\n    return metadataObject;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Style object.\r\n */\r\nfunction readStyle(node, objectStack) {\r\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<string>|undefined} Keyword list.\r\n */\r\nfunction readKeywordList(node, objectStack) {\r\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\r\n}\r\n\r\nexport default WMSCapabilities;\r\n","import WMSCapabilities from '../src/ol/format/WMSCapabilities.js';\r\n\r\nconst parser = new WMSCapabilities();\r\n\r\nfetch('data/ogcsample.xml')\r\n  .then(function (response) {\r\n    return response.text();\r\n  })\r\n  .then(function (text) {\r\n    const result = parser.read(text);\r\n    document.getElementById('log').innerText = JSON.stringify(result, null, 2);\r\n  });\r\n"],"sourceRoot":""}