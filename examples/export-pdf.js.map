{"version":3,"sources":["webpack:///./export-pdf.js"],"names":["raster","source","feature","readFeature","getGeometry","transform","const","vector","features","opacity","map","layers","target","view","center","zoom","dims","a0","a1","a2","a3","a4","a5","exportButton","document","getElementById","addEventListener","disabled","body","style","cursor","format","value","resolution","dim","width","Math","round","height","size","getSize","viewResolution","getView","getResolution","once","mapCanvas","createElement","mapContext","getContext","Array","prototype","forEach","call","querySelectorAll","canvas","parentNode","globalAlpha","Number","matrix","match","split","CanvasRenderingContext2D","setTransform","apply","drawImage","pdf","jsPDF","undefined","addImage","toDataURL","save","setSize","setResolution","printSize","scaling","min"],"mappings":"2FAAA,gEAMMA,EAAS,IAAI,IAAU,CAC3BC,OAAQ,IAAI,MAIRC,GADS,IAAI,KACIC,YACrB,6KAIFD,EAAQE,cAAcC,UAAU,YAAa,aAE7CC,IAAMC,EAAS,IAAI,IAAY,CAC7BN,OAAQ,IAAI,IAAa,CACvBO,SAAU,CAACN,KAEbO,QAAS,KAGLC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACX,EAAQO,GACjBK,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAO,CACXC,GAAI,CAAC,KAAM,KACXC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,MAGNC,EAAeC,SAASC,eAAe,cAE7CF,EAAaG,iBACX,SACA,WACEH,EAAaI,UAAW,EACxBH,SAASI,KAAKC,MAAMC,OAAS,WAE7BxB,IAAMyB,EAASP,SAASC,eAAe,UAAUO,MAC3CC,EAAaT,SAASC,eAAe,cAAcO,MACnDE,EAAMlB,EAAKe,GACXI,EAAQC,KAAKC,MAAOH,EAAI,GAAKD,EAAc,MAC3CK,EAASF,KAAKC,MAAOH,EAAI,GAAKD,EAAc,MAC5CM,EAAO7B,EAAI8B,UACXC,EAAiB/B,EAAIgC,UAAUC,gBAErCjC,EAAIkC,KAAK,kBAAkB,WACzBtC,IAAMuC,EAAYrB,SAASsB,cAAc,UACzCD,EAAUV,MAAQA,EAClBU,EAAUP,OAASA,EACnBhC,IAAMyC,EAAaF,EAAUG,WAAW,MACxCC,MAAMC,UAAUC,QAAQC,KACtB5B,SAAS6B,iBAAiB,qBAC1B,SAAUC,GACR,GAAIA,EAAOnB,MAAQ,EAAG,CACpB7B,IAAMG,EAAU6C,EAAOC,WAAW1B,MAAMpB,QACxCsC,EAAWS,YAA0B,KAAZ/C,EAAiB,EAAIgD,OAAOhD,GACrDH,IAEMoD,EAFYJ,EAAOzB,MAAMxB,UAG5BsD,MAAM,wBAAwB,GAC9BC,MAAM,KACNlD,IAAI+C,QAEPI,yBAAyBX,UAAUY,aAAaC,MAC9ChB,EACAW,GAEFX,EAAWiB,UAAUV,EAAQ,EAAG,OAItChD,IAAM2D,EAAM,IAAIC,MAAM,iBAAaC,EAAWpC,GAC9CkC,EAAIG,SACFvB,EAAUwB,UAAU,cACpB,OACA,EACA,EACAnC,EAAI,GACJA,EAAI,IAEN+B,EAAIK,KAAK,WAET5D,EAAI6D,QAAQhC,GACZ7B,EAAIgC,UAAU8B,cAAc/B,GAC5BlB,EAAaI,UAAW,EACxBH,SAASI,KAAKC,MAAMC,OAAS,UAI/BxB,IAAMmE,EAAY,CAACtC,EAAOG,GAC1B5B,EAAI6D,QAAQE,GACZnE,IAAMoE,EAAUtC,KAAKuC,IAAIxC,EAAQI,EAAK,GAAID,EAASC,EAAK,IACxD7B,EAAIgC,UAAU8B,cAAc/B,EAAiBiC,MAE/C,K","file":"export-pdf.js","sourcesContent":["import Map from '../src/ol/Map.js';\r\nimport View from '../src/ol/View.js';\r\nimport WKT from '../src/ol/format/WKT.js';\r\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\r\n\r\nconst raster = new TileLayer({\r\n  source: new OSM(),\r\n});\r\n\r\nconst format = new WKT();\r\nconst feature = format.readFeature(\r\n  'POLYGON((10.689697265625 -25.0927734375, 34.595947265625 ' +\r\n    '-20.1708984375, 38.814697265625 -35.6396484375, 13.502197265625 ' +\r\n    '-39.1552734375, 10.689697265625 -25.0927734375))'\r\n);\r\nfeature.getGeometry().transform('EPSG:4326', 'EPSG:3857');\r\n\r\nconst vector = new VectorLayer({\r\n  source: new VectorSource({\r\n    features: [feature],\r\n  }),\r\n  opacity: 0.5,\r\n});\r\n\r\nconst map = new Map({\r\n  layers: [raster, vector],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 2,\r\n  }),\r\n});\r\n\r\nconst dims = {\r\n  a0: [1189, 841],\r\n  a1: [841, 594],\r\n  a2: [594, 420],\r\n  a3: [420, 297],\r\n  a4: [297, 210],\r\n  a5: [210, 148],\r\n};\r\n\r\nconst exportButton = document.getElementById('export-pdf');\r\n\r\nexportButton.addEventListener(\r\n  'click',\r\n  function () {\r\n    exportButton.disabled = true;\r\n    document.body.style.cursor = 'progress';\r\n\r\n    const format = document.getElementById('format').value;\r\n    const resolution = document.getElementById('resolution').value;\r\n    const dim = dims[format];\r\n    const width = Math.round((dim[0] * resolution) / 25.4);\r\n    const height = Math.round((dim[1] * resolution) / 25.4);\r\n    const size = map.getSize();\r\n    const viewResolution = map.getView().getResolution();\r\n\r\n    map.once('rendercomplete', function () {\r\n      const mapCanvas = document.createElement('canvas');\r\n      mapCanvas.width = width;\r\n      mapCanvas.height = height;\r\n      const mapContext = mapCanvas.getContext('2d');\r\n      Array.prototype.forEach.call(\r\n        document.querySelectorAll('.ol-layer canvas'),\r\n        function (canvas) {\r\n          if (canvas.width > 0) {\r\n            const opacity = canvas.parentNode.style.opacity;\r\n            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\r\n            const transform = canvas.style.transform;\r\n            // Get the transform parameters from the style's transform matrix\r\n            const matrix = transform\r\n              .match(/^matrix\\(([^\\(]*)\\)$/)[1]\r\n              .split(',')\r\n              .map(Number);\r\n            // Apply the transform to the export map context\r\n            CanvasRenderingContext2D.prototype.setTransform.apply(\r\n              mapContext,\r\n              matrix\r\n            );\r\n            mapContext.drawImage(canvas, 0, 0);\r\n          }\r\n        }\r\n      );\r\n      const pdf = new jsPDF('landscape', undefined, format);\r\n      pdf.addImage(\r\n        mapCanvas.toDataURL('image/jpeg'),\r\n        'JPEG',\r\n        0,\r\n        0,\r\n        dim[0],\r\n        dim[1]\r\n      );\r\n      pdf.save('map.pdf');\r\n      // Reset original map size\r\n      map.setSize(size);\r\n      map.getView().setResolution(viewResolution);\r\n      exportButton.disabled = false;\r\n      document.body.style.cursor = 'auto';\r\n    });\r\n\r\n    // Set print size\r\n    const printSize = [width, height];\r\n    map.setSize(printSize);\r\n    const scaling = Math.min(width / size[0], height / size[1]);\r\n    map.getView().setResolution(viewResolution / scaling);\r\n  },\r\n  false\r\n);\r\n"],"sourceRoot":""}