{"version":3,"sources":["webpack:///./immediate-geographic.js"],"names":["const","layer","source","map","layers","target","view","center","zoom","image","radius","fill","color","style","n","geometries","Array","i","lon","Math","random","lat","on","event","vectorContext","importance","pow","setOpacity","setScale","setStyle","drawGeometry","push","shift","render"],"mappings":"2FAAA,+FASA,cA6BA,IA3BAA,IAAMC,EAAQ,IAAI,IAAU,CAC1BC,OAAQ,IAAI,IAAO,CACjBD,MAAO,YAILE,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACH,GACTI,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAQ,IAAI,IAAO,CACvBC,OAAQ,EACRC,KAAM,IAAI,IAAK,CAACC,MAAO,uBAGnBC,EAAQ,IAAI,IAAM,CACtBJ,MAAOA,IAGHK,EAAI,IACJC,EAAa,IAAIC,MAAMF,GAEpBG,EAAI,EAAGA,EAAIH,IAAKG,EAAG,CAC1BjB,IAAMkB,EAAM,IAAMC,KAAKC,SAAW,IAC5BC,EAAM,IAAMF,KAAKC,SAAW,GAClCL,EAAWE,GAAK,IAAI,IAAM,CAACC,EAAKG,IAGlCpB,EAAMqB,GAAG,cAAc,SAAUC,GAG/B,IAFAvB,IAAMwB,EAAgB,YAAiBD,GAE9BN,EAAI,EAAGA,EAAIH,IAAKG,EAAG,CAC1BjB,IAAMyB,EAAa,YAAUN,KAAKO,KAAKZ,EAAIG,GAAKH,EAAG,MAC/CW,EAAa,KAGjBhB,EAAMkB,WAAWF,GACjBhB,EAAMmB,SAASH,GACfD,EAAcK,SAAShB,GACvBW,EAAcM,aAAaf,EAAWE,KAGxCjB,IAAMkB,EAAM,IAAMC,KAAKC,SAAW,IAC5BC,EAAM,IAAMF,KAAKC,SAAW,GAClCL,EAAWgB,KAAK,IAAI,IAAM,CAACb,EAAKG,KAChCN,EAAWiB,QACX7B,EAAI8B,c","file":"immediate-geographic.js","sourcesContent":["import Stamen from '../src/ol/source/Stamen.js';\r\nimport TileLayer from '../src/ol/layer/Tile.js';\r\nimport {Circle, Fill, Style} from '../src/ol/style.js';\r\nimport {Map, View} from '../src/ol/index.js';\r\nimport {Point} from '../src/ol/geom.js';\r\nimport {getVectorContext} from '../src/ol/render.js';\r\nimport {upAndDown} from '../src/ol/easing.js';\r\nimport {useGeographic} from '../src/ol/proj.js';\r\n\r\nuseGeographic();\r\n\r\nconst layer = new TileLayer({\r\n  source: new Stamen({\r\n    layer: 'toner',\r\n  }),\r\n});\r\n\r\nconst map = new Map({\r\n  layers: [layer],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 2,\r\n  }),\r\n});\r\n\r\nconst image = new Circle({\r\n  radius: 8,\r\n  fill: new Fill({color: 'rgb(255, 153, 0)'}),\r\n});\r\n\r\nconst style = new Style({\r\n  image: image,\r\n});\r\n\r\nconst n = 1000;\r\nconst geometries = new Array(n);\r\n\r\nfor (let i = 0; i < n; ++i) {\r\n  const lon = 360 * Math.random() - 180;\r\n  const lat = 180 * Math.random() - 90;\r\n  geometries[i] = new Point([lon, lat]);\r\n}\r\n\r\nlayer.on('postrender', function (event) {\r\n  const vectorContext = getVectorContext(event);\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const importance = upAndDown(Math.pow((n - i) / n, 0.15));\r\n    if (importance < 0.1) {\r\n      continue;\r\n    }\r\n    image.setOpacity(importance);\r\n    image.setScale(importance);\r\n    vectorContext.setStyle(style);\r\n    vectorContext.drawGeometry(geometries[i]);\r\n  }\r\n\r\n  const lon = 360 * Math.random() - 180;\r\n  const lat = 180 * Math.random() - 90;\r\n  geometries.push(new Point([lon, lat]));\r\n  geometries.shift();\r\n  map.render();\r\n});\r\n"],"sourceRoot":""}