{"version":3,"sources":["webpack:///./vector-esri-edit.js"],"names":["serviceUrl","esrijsonFormat","vectorSource","loader","extent","resolution","projection","const","url","encodeURIComponent","$","ajax","dataType","success","response","error","alert","message","details","join","features","readFeatures","featureProjection","length","addFeatures","strategy","tileSize","vector","source","raster","attributions","draw","type","select","setActive","selected","getFeatures","modify","map","interactions","extend","layers","target","document","getElementById","view","center","zoom","typeSelect","onchange","value","dirty","on","evt","element","get","feature","fid","payload","writeFeature","getView","getProjection","post","f","done","data","result","JSON","parse","updateResults","description","code","addResults","set"],"mappings":"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","file":"vector-esri-edit.js","sourcesContent":["import EsriJSON from '../src/ol/format/EsriJSON.js';\r\nimport Map from '../src/ol/Map.js';\r\nimport VectorSource from '../src/ol/source/Vector.js';\r\nimport View from '../src/ol/View.js';\r\nimport XYZ from '../src/ol/source/XYZ.js';\r\nimport {\r\n  Draw,\r\n  Modify,\r\n  Select,\r\n  defaults as defaultInteractions,\r\n} from '../src/ol/interaction.js';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\r\nimport {createXYZ} from '../src/ol/tilegrid.js';\r\nimport {fromLonLat} from '../src/ol/proj.js';\r\nimport {tile as tileStrategy} from '../src/ol/loadingstrategy.js';\r\n\r\nconst serviceUrl =\r\n  'https://sampleserver6.arcgisonline.com/arcgis/rest/services/Wildfire/FeatureServer/';\r\nconst layer = '2';\r\n\r\nconst esrijsonFormat = new EsriJSON();\r\n\r\nconst vectorSource = new VectorSource({\r\n  loader: function (extent, resolution, projection) {\r\n    const url =\r\n      serviceUrl +\r\n      layer +\r\n      '/query/?f=json&' +\r\n      'returnGeometry=true&spatialRel=esriSpatialRelIntersects&geometry=' +\r\n      encodeURIComponent(\r\n        '{\"xmin\":' +\r\n          extent[0] +\r\n          ',\"ymin\":' +\r\n          extent[1] +\r\n          ',\"xmax\":' +\r\n          extent[2] +\r\n          ',\"ymax\":' +\r\n          extent[3] +\r\n          ',\"spatialReference\":{\"wkid\":102100}}'\r\n      ) +\r\n      '&geometryType=esriGeometryEnvelope&inSR=102100&outFields=*' +\r\n      '&outSR=102100';\r\n    $.ajax({\r\n      url: url,\r\n      dataType: 'jsonp',\r\n      success: function (response) {\r\n        if (response.error) {\r\n          alert(\r\n            response.error.message + '\\n' + response.error.details.join('\\n')\r\n          );\r\n        } else {\r\n          // dataProjection will be read from document\r\n          const features = esrijsonFormat.readFeatures(response, {\r\n            featureProjection: projection,\r\n          });\r\n          if (features.length > 0) {\r\n            vectorSource.addFeatures(features);\r\n          }\r\n        }\r\n      },\r\n    });\r\n  },\r\n  strategy: tileStrategy(\r\n    createXYZ({\r\n      tileSize: 512,\r\n    })\r\n  ),\r\n});\r\n\r\nconst vector = new VectorLayer({\r\n  source: vectorSource,\r\n});\r\n\r\nconst raster = new TileLayer({\r\n  source: new XYZ({\r\n    attributions:\r\n      'Tiles Â© <a href=\"https://services.arcgisonline.com/ArcGIS/' +\r\n      'rest/services/World_Topo_Map/MapServer\">ArcGIS</a>',\r\n    url:\r\n      'https://server.arcgisonline.com/ArcGIS/rest/services/' +\r\n      'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\r\n  }),\r\n});\r\n\r\nconst draw = new Draw({\r\n  source: vectorSource,\r\n  type: 'Polygon',\r\n});\r\n\r\nconst select = new Select();\r\nselect.setActive(false);\r\nconst selected = select.getFeatures();\r\n\r\nconst modify = new Modify({\r\n  features: selected,\r\n});\r\nmodify.setActive(false);\r\n\r\nconst map = new Map({\r\n  interactions: defaultInteractions().extend([draw, select, modify]),\r\n  layers: [raster, vector],\r\n  target: document.getElementById('map'),\r\n  view: new View({\r\n    center: fromLonLat([-110.875, 37.345]),\r\n    zoom: 5,\r\n  }),\r\n});\r\n\r\nconst typeSelect = document.getElementById('type');\r\n\r\n/**\r\n * Let user change the interaction type.\r\n */\r\ntypeSelect.onchange = function () {\r\n  draw.setActive(typeSelect.value === 'DRAW');\r\n  select.setActive(typeSelect.value === 'MODIFY');\r\n  modify.setActive(typeSelect.value === 'MODIFY');\r\n};\r\n\r\nconst dirty = {};\r\n\r\nselected.on('add', function (evt) {\r\n  const feature = evt.element;\r\n  feature.on('change', function (evt) {\r\n    dirty[evt.target.get('objectid')] = true;\r\n  });\r\n});\r\n\r\nselected.on('remove', function (evt) {\r\n  const feature = evt.element;\r\n  const fid = feature.get('objectid');\r\n  if (dirty[fid] === true) {\r\n    const payload =\r\n      '[' +\r\n      esrijsonFormat.writeFeature(feature, {\r\n        featureProjection: map.getView().getProjection(),\r\n      }) +\r\n      ']';\r\n    const url = serviceUrl + layer + '/updateFeatures';\r\n    $.post(url, {f: 'json', features: payload}).done(function (data) {\r\n      const result = typeof data === 'string' ? JSON.parse(data) : data;\r\n      if (result.updateResults && result.updateResults.length > 0) {\r\n        if (result.updateResults[0].success !== true) {\r\n          const error = result.updateResults[0].error;\r\n          alert(error.description + ' (' + error.code + ')');\r\n        } else {\r\n          delete dirty[fid];\r\n        }\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\ndraw.on('drawend', function (evt) {\r\n  const feature = evt.feature;\r\n  const payload =\r\n    '[' +\r\n    esrijsonFormat.writeFeature(feature, {\r\n      featureProjection: map.getView().getProjection(),\r\n    }) +\r\n    ']';\r\n  const url = serviceUrl + layer + '/addFeatures';\r\n  $.post(url, {f: 'json', features: payload}).done(function (data) {\r\n    const result = typeof data === 'string' ? JSON.parse(data) : data;\r\n    if (result.addResults && result.addResults.length > 0) {\r\n      if (result.addResults[0].success === true) {\r\n        feature.set('objectid', result.addResults[0]['objectId']);\r\n      } else {\r\n        const error = result.addResults[0].error;\r\n        alert(error.description + ' (' + error.code + ')');\r\n      }\r\n    }\r\n  });\r\n});\r\n"],"sourceRoot":""}