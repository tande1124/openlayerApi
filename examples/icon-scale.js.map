{"version":3,"sources":["webpack:///./icon-scale.js"],"names":["rasterLayer","source","url","crossOrigin","iconFeature","geometry","name","feature1","feature2","iconStyle","image","anchor","src","scale","rotation","Math","PI","text","textAlign","textBaseline","i","j","setStyle","const","x","sin","y","getImage","setScale","getText","on","event","vectorContext","cos","drawFeature","vectorSource","features","vectorLayer","map","layers","target","document","getElementById","view","center","zoom","setInterval","changed","element","popup","positioning","stopEvent","offset","addOverlay","evt","feature","forEachFeatureAtPixel","pixel","$","popover","coordinates","getGeometry","getCoordinates","setPosition","placement","html","animation","content","get","e","dragging","getEventPixel","originalEvent","hit","hasFeatureAtPixel","getTarget","style","cursor"],"mappings":"2FAAA,uHAYMA,EAAc,IAAI,IAAU,CAChCC,OAAQ,IAAI,IAAS,CACnBC,IAAK,6DACLC,YAAa,OAIXC,EAAc,IAAI,IAAQ,CAC9BC,SAAU,IAAI,IAAM,YAAW,CAAC,GAAI,MACpCC,KAAM,WAGFC,EAAW,IAAI,IAAQ,CAC3BF,SAAU,IAAI,IAAM,YAAW,CAAC,GAAI,MACpCC,KAAM,kBAGFE,EAAW,IAAI,IAAQ,CAC3BH,SAAU,IAAI,IAAM,YAAW,EAAE,GAAI,MACrCC,KAAM,kBAGFG,EAAY,IAAI,IAAM,CAC1BC,MAAO,IAAI,IAAK,CACdC,OAAQ,CAAC,GAAK,IACdC,IAAK,gBACLT,YAAa,GACbU,MAAO,CAAC,EAAG,GACXC,SAAUC,KAAKC,GAAK,IAEtBC,KAAM,IAAI,IAAK,CACbA,KAAM,aACNJ,MAAO,CAAC,EAAG,GACXC,SAAUC,KAAKC,GAAK,EACpBE,UAAW,SACXC,aAAc,UAIdC,EAAI,EACJC,EAAI,GAERjB,EAAYkB,UAAS,WACnBC,IAAMC,EAAoC,EAAhCT,KAAKU,IAAKL,EAAIL,KAAKC,GAAM,KAC7BU,EAAoC,EAAhCX,KAAKU,IAAKJ,EAAIN,KAAKC,GAAM,KAGnC,OAFAP,EAAUkB,WAAWC,SAAS,CAACJ,EAAGE,IAClCjB,EAAUoB,UAAUD,SAAS,CAACJ,EAAGE,IAC1BjB,KAGTT,EAAY8B,GAAG,cAAc,SAAUC,GACrCR,IAAMS,EAAgB,YAAiBD,GACjCP,EAAoC,EAAhCT,KAAKkB,IAAKb,EAAIL,KAAKC,GAAM,KAC7BU,EAAoC,EAAhCX,KAAKkB,IAAKZ,EAAIN,KAAKC,GAAM,KACnCP,EAAUkB,WAAWC,SAAS,CAACJ,EAAGE,IAClCjB,EAAUoB,UAAUD,SAAS,CAACJ,EAAGE,IACjCM,EAAcE,YAAY1B,EAAUC,MAGtCc,IAAMY,EAAe,IAAI,IAAa,CACpCC,SAAU,CAAChC,EAAaG,EAAUC,KAG9B6B,EAAc,IAAI,IAAY,CAClCpC,OAAQkC,IAGJG,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACvC,EAAaqC,GACtBG,OAAQC,SAASC,eAAe,OAChCC,KAAM,IAAI,IAAK,CACbC,OAAQ,YAAW,EAAE,GAAI,IACzBC,KAAM,MAIVC,aAAY,WACV1B,GAAKA,EAAI,GAAK,IACdC,GAAKA,EAAI,GAAK,IACdc,EAAaY,YACZ,KAEHxB,IAAMyB,EAAUP,SAASC,eAAe,SAElCO,EAAQ,IAAI,IAAQ,CACxBD,QAASA,EACTE,YAAa,gBACbC,WAAW,EACXC,OAAQ,CAAC,GAAI,MAEfd,EAAIe,WAAWJ,GAGfX,EAAIR,GAAG,SAAS,SAAUwB,GACxB/B,IAAMgC,EAAUjB,EAAIkB,sBAAsBF,EAAIG,OAAO,SAAUF,GAC7D,OAAOA,KAGT,GADAG,EAAEV,GAASW,QAAQ,WACfJ,EAAS,CACXhC,IAAMqC,EAAcL,EAAQM,cAAcC,iBAC1Cb,EAAMc,YAAYH,GAClBF,EAAEV,GAASW,QAAQ,CACjBK,UAAW,MACXC,MAAM,EACNC,WAAW,EACXC,QAASZ,EAAQa,IAAI,UAEvBV,EAAEV,GAASW,QAAQ,YAKvBrB,EAAIR,GAAG,eAAe,SAAUuC,GAC9B,GAAIA,EAAEC,SACJZ,EAAEV,GAASW,QAAQ,eADrB,CAIApC,IAAMkC,EAAQnB,EAAIiC,cAAcF,EAAEG,eAC5BC,EAAMnC,EAAIoC,kBAAkBjB,GAClCnB,EAAIqC,YAAYC,MAAMC,OAASJ,EAAM,UAAY,S","file":"icon-scale.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\r\nimport Map from '../src/ol/Map.js';\r\nimport Overlay from '../src/ol/Overlay.js';\r\nimport Point from '../src/ol/geom/Point.js';\r\nimport TileJSON from '../src/ol/source/TileJSON.js';\r\nimport VectorSource from '../src/ol/source/Vector.js';\r\nimport View from '../src/ol/View.js';\r\nimport {Icon, Style, Text} from '../src/ol/style.js';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\r\nimport {fromLonLat} from '../src/ol/proj.js';\r\nimport {getVectorContext} from '../src/ol/render.js';\r\n\r\nconst rasterLayer = new TileLayer({\r\n  source: new TileJSON({\r\n    url: 'https://a.tiles.mapbox.com/v3/aj.1x1-degrees.json?secure=1',\r\n    crossOrigin: '',\r\n  }),\r\n});\r\n\r\nconst iconFeature = new Feature({\r\n  geometry: new Point(fromLonLat([0, -10])),\r\n  name: 'Fish.1',\r\n});\r\n\r\nconst feature1 = new Feature({\r\n  geometry: new Point(fromLonLat([0, -10])),\r\n  name: 'Fish.1 Island',\r\n});\r\n\r\nconst feature2 = new Feature({\r\n  geometry: new Point(fromLonLat([-30, 10])),\r\n  name: 'Fish.2 Island',\r\n});\r\n\r\nconst iconStyle = new Style({\r\n  image: new Icon({\r\n    anchor: [0.5, 0.9],\r\n    src: 'data/fish.png',\r\n    crossOrigin: '',\r\n    scale: [0, 0],\r\n    rotation: Math.PI / 4,\r\n  }),\r\n  text: new Text({\r\n    text: 'FISH\\nTEXT',\r\n    scale: [0, 0],\r\n    rotation: Math.PI / 4,\r\n    textAlign: 'center',\r\n    textBaseline: 'top',\r\n  }),\r\n});\r\n\r\nlet i = 0;\r\nlet j = 45;\r\n\r\niconFeature.setStyle(function () {\r\n  const x = Math.sin((i * Math.PI) / 180) * 3;\r\n  const y = Math.sin((j * Math.PI) / 180) * 4;\r\n  iconStyle.getImage().setScale([x, y]);\r\n  iconStyle.getText().setScale([x, y]);\r\n  return iconStyle;\r\n});\r\n\r\nrasterLayer.on('postrender', function (event) {\r\n  const vectorContext = getVectorContext(event);\r\n  const x = Math.cos((i * Math.PI) / 180) * 3;\r\n  const y = Math.cos((j * Math.PI) / 180) * 4;\r\n  iconStyle.getImage().setScale([x, y]);\r\n  iconStyle.getText().setScale([x, y]);\r\n  vectorContext.drawFeature(feature2, iconStyle);\r\n});\r\n\r\nconst vectorSource = new VectorSource({\r\n  features: [iconFeature, feature1, feature2],\r\n});\r\n\r\nconst vectorLayer = new VectorLayer({\r\n  source: vectorSource,\r\n});\r\n\r\nconst map = new Map({\r\n  layers: [rasterLayer, vectorLayer],\r\n  target: document.getElementById('map'),\r\n  view: new View({\r\n    center: fromLonLat([-15, 0]),\r\n    zoom: 3,\r\n  }),\r\n});\r\n\r\nsetInterval(function () {\r\n  i = (i + 4) % 360;\r\n  j = (j + 5) % 360;\r\n  vectorSource.changed();\r\n}, 1000);\r\n\r\nconst element = document.getElementById('popup');\r\n\r\nconst popup = new Overlay({\r\n  element: element,\r\n  positioning: 'bottom-center',\r\n  stopEvent: false,\r\n  offset: [0, -50],\r\n});\r\nmap.addOverlay(popup);\r\n\r\n// display popup on click\r\nmap.on('click', function (evt) {\r\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\r\n    return feature;\r\n  });\r\n  $(element).popover('dispose');\r\n  if (feature) {\r\n    const coordinates = feature.getGeometry().getCoordinates();\r\n    popup.setPosition(coordinates);\r\n    $(element).popover({\r\n      placement: 'top',\r\n      html: true,\r\n      animation: false,\r\n      content: feature.get('name'),\r\n    });\r\n    $(element).popover('show');\r\n  }\r\n});\r\n\r\n// change mouse cursor when over marker\r\nmap.on('pointermove', function (e) {\r\n  if (e.dragging) {\r\n    $(element).popover('dispose');\r\n    return;\r\n  }\r\n  const pixel = map.getEventPixel(e.originalEvent);\r\n  const hit = map.hasFeatureAtPixel(pixel);\r\n  map.getTarget().style.cursor = hit ? 'pointer' : '';\r\n});\r\n"],"sourceRoot":""}