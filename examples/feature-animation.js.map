{"version":3,"sources":["webpack:///./feature-animation.js"],"names":["tileLayer","source","wrapX","map","layers","target","view","center","zoom","multiWorld","vector","addLayer","on","e","feature","start","listenerKey","Date","getTime","event","const","vectorContext","frameState","flashGeom","getGeometry","clone","elapsed","time","elapsedRatio","radius","opacity","style","image","stroke","color","width","setStyle","drawGeometry","render","window","setInterval","x","Math","random","y","geom","addFeature"],"mappings":"2FAAA,+HAYMA,EAAY,IAAI,IAAU,CAC9BC,OAAQ,IAAI,IAAI,CACdC,OAAO,MAILC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACJ,GACTK,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,EACNC,YAAY,MAIVR,EAAS,IAAI,IAAa,CAC9BC,OAAO,IAEHQ,EAAS,IAAI,IAAY,CAC7BT,OAAQA,IAEVE,EAAIQ,SAASD,GA8CbT,EAAOW,GAAG,cAAc,SAAUC,GAnClC,IAAeC,EACPC,EACAC,EAFOF,EAoCPD,EAAEC,QAnCFC,GAAQ,IAAIE,MAAOC,UACnBF,EAAchB,EAAUY,GAAG,cAEjC,SAAiBO,GACfC,IAAMC,EAAgB,YAAiBF,GACjCG,EAAaH,EAAMG,WACnBC,EAAYT,EAAQU,cAAcC,QAClCC,EAAUJ,EAAWK,KAAOZ,EAC5Ba,EAAeF,EAVR,IAYPG,EAAiC,GAAxB,YAAQD,GAAqB,EACtCE,EAAU,YAAQ,EAAIF,GAEtBG,EAAQ,IAAI,IAAM,CACtBC,MAAO,IAAI,IAAY,CACrBH,OAAQA,EACRI,OAAQ,IAAI,IAAO,CACjBC,MAAO,mBAAqBJ,EAAU,IACtCK,MAAO,IAAOL,QAKpBT,EAAce,SAASL,GACvBV,EAAcgB,aAAad,GACvBG,EA3BS,IA4BX,YAAQV,GAIVb,EAAImC,eAQRC,OAAOC,aAhDP,WACEpB,IAAMqB,EAAoB,IAAhBC,KAAKC,SAAiB,IAC1BC,EAAoB,IAAhBF,KAAKC,SAAiB,GAC1BE,EAAO,IAAI,IAAM,YAAW,CAACJ,EAAGG,KAChC9B,EAAU,IAAI,IAAQ+B,GAC5B5C,EAAO6C,WAAWhC,KA2CiB,O","file":"feature-animation.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\r\nimport Map from '../src/ol/Map.js';\r\nimport Point from '../src/ol/geom/Point.js';\r\nimport View from '../src/ol/View.js';\r\nimport {Circle as CircleStyle, Stroke, Style} from '../src/ol/style.js';\r\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\r\nimport {easeOut} from '../src/ol/easing.js';\r\nimport {fromLonLat} from '../src/ol/proj.js';\r\nimport {getVectorContext} from '../src/ol/render.js';\r\nimport {unByKey} from '../src/ol/Observable.js';\r\n\r\nconst tileLayer = new TileLayer({\r\n  source: new OSM({\r\n    wrapX: false,\r\n  }),\r\n});\r\n\r\nconst map = new Map({\r\n  layers: [tileLayer],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 1,\r\n    multiWorld: true,\r\n  }),\r\n});\r\n\r\nconst source = new VectorSource({\r\n  wrapX: false,\r\n});\r\nconst vector = new VectorLayer({\r\n  source: source,\r\n});\r\nmap.addLayer(vector);\r\n\r\nfunction addRandomFeature() {\r\n  const x = Math.random() * 360 - 180;\r\n  const y = Math.random() * 180 - 90;\r\n  const geom = new Point(fromLonLat([x, y]));\r\n  const feature = new Feature(geom);\r\n  source.addFeature(feature);\r\n}\r\n\r\nconst duration = 3000;\r\nfunction flash(feature) {\r\n  const start = new Date().getTime();\r\n  const listenerKey = tileLayer.on('postrender', animate);\r\n\r\n  function animate(event) {\r\n    const vectorContext = getVectorContext(event);\r\n    const frameState = event.frameState;\r\n    const flashGeom = feature.getGeometry().clone();\r\n    const elapsed = frameState.time - start;\r\n    const elapsedRatio = elapsed / duration;\r\n    // radius will be 5 at start and 30 at end.\r\n    const radius = easeOut(elapsedRatio) * 25 + 5;\r\n    const opacity = easeOut(1 - elapsedRatio);\r\n\r\n    const style = new Style({\r\n      image: new CircleStyle({\r\n        radius: radius,\r\n        stroke: new Stroke({\r\n          color: 'rgba(255, 0, 0, ' + opacity + ')',\r\n          width: 0.25 + opacity,\r\n        }),\r\n      }),\r\n    });\r\n\r\n    vectorContext.setStyle(style);\r\n    vectorContext.drawGeometry(flashGeom);\r\n    if (elapsed > duration) {\r\n      unByKey(listenerKey);\r\n      return;\r\n    }\r\n    // tell OpenLayers to continue postrender animation\r\n    map.render();\r\n  }\r\n}\r\n\r\nsource.on('addfeature', function (e) {\r\n  flash(e.feature);\r\n});\r\n\r\nwindow.setInterval(addRandomFeature, 1000);\r\n"],"sourceRoot":""}