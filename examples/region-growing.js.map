{"version":3,"sources":["webpack:///./region-growing.js"],"names":["const","let"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACmB;AACjB;AACK;AACgC;AAC7B;AAC7C;AACA,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,EAAEA,GAAK,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1B,EAAEC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;AACxB,EAAED,GAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,EAAE,IAAI,CAAC,IAAI,EAAE;AACb,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,EAAEA,GAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC5B,EAAEA,GAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AAC9B,EAAEA,GAAK,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;AAC/B,EAAEA,GAAK,CAAC,UAAU,GAAG,IAAI,iBAAiB,CAAC,SAAS,CAAC,CAAC;AACtD,EAAEA,GAAK,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClD,EAAEA,GAAK,CAAC,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;AACnC,EAAEA,GAAK,CAAC,KAAK,GAAG,SAAS,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;AACvC,EAAEA,GAAK,CAAC,KAAK,GAAG,SAAS,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;AACvC,EAAEC,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AACpB,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE;AACtB,IAAID,GAAK,CAAC,OAAO,GAAG,EAAE,CAAC;AACvB,IAAI,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACnD;AACA;AACA;AACA,MAAMD,GAAK,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,MAAM,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACrD,QAAQD,GAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAQA,GAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE;AACzD,UAAUA,GAAK,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACzC,UAAUA,GAAK,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AACnC,UAAUA,GAAK,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AACvC,UAAUA,GAAK,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AACvC,UAAUA,GAAK,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AACvC;AACA,UAAU,IAAI,EAAE,KAAK,CAAC,EAAE;AACxB,YAAY,SAAS;AACrB,WAAW;AACX,UAAU;AACV,YAAY,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,KAAK;AACxC,YAAY,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,KAAK;AACxC,YAAY,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,KAAK;AACxC,YAAY;AACZ,YAAY,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;AACjC,YAAY,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,YAAY,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,YAAY,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;AACrC,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjC,WAAW;AACX;AACA,UAAU,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAChC,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,IAAI,GAAG,OAAO,CAAC;AACnB,GAAG;AACH,EAAE,OAAO,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC1D,CAAC;AACD;AACA,SAAS,UAAU,CAAC,IAAI,EAAE;AAC1B,EAAEA,GAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,EAAEA,GAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,EAAE,OAAO;AACT,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACd,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACd,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACd,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CACZ,CAAC,CAAC;AACJ,CAAC;AACD;AACAA,GAAK,CAAC,GAAG,GAAG,mCAAmC,CAAC;AAChDA,GAAK,CAAC,YAAY;AAClB,EAAE,oFAAoF;AACtF,EAAE,yGAAyG,CAAC;AAC5G;AACAA,GAAK,CAAC,OAAO,GAAG,IAAI,gEAAS,CAAC;AAC9B,EAAE,MAAM,EAAE,IAAI,qEAAG,CAAC;AAClB,IAAI,YAAY,EAAE,YAAY;AAC9B,IAAI,GAAG,EAAE,+DAA+D,GAAG,GAAG;AAC9E,IAAI,OAAO,EAAE,EAAE;AACf,IAAI,WAAW,EAAE,EAAE;AACnB,GAAG,CAAC;AACJ,CAAC,CAAC,CAAC;AACH;AACAA,GAAK,CAAC,MAAM,GAAG,IAAI,wEAAY,CAAC;AAChC,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;AAChC,EAAE,aAAa,EAAE,OAAO;AACxB,EAAE,SAAS,EAAE,UAAU;AACvB;AACA;AACA,EAAE,GAAG,EAAE;AACP,IAAI,UAAU,EAAE,UAAU;AAC1B,GAAG;AACH,CAAC,CAAC,CAAC;AACH;AACAA,GAAK,CAAC,WAAW,GAAG,IAAI,gEAAU,CAAC;AACnC,EAAE,OAAO,EAAE,GAAG;AACd,EAAE,MAAM,EAAE,MAAM;AAChB,CAAC,CAAC,CAAC;AACH;AACAA,GAAK,CAAC,GAAG,GAAG,IAAI,8DAAG,CAAC;AACpB,EAAE,MAAM,EAAE,CAAC,OAAO,EAAE,WAAW,CAAC;AAChC,EAAE,MAAM,EAAE,KAAK;AACf,EAAE,IAAI,EAAE,IAAI,+DAAI,CAAC;AACjB,IAAI,MAAM,EAAE,0EAAU,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACxC,IAAI,IAAI,EAAE,EAAE;AACZ,GAAG,CAAC;AACJ,CAAC,CAAC,CAAC;AACH;AACAC,GAAG,CAAC,UAAU,CAAC;AACf;AACA,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,KAAK,EAAE;AACjC,EAAE,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;AAChC,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC;AACnB,CAAC,CAAC,CAAC;AACH;AACAD,GAAK,CAAC,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AAC9D;AACA,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAU,KAAK,EAAE;AAC/C;AACA,EAAEA,GAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAC1B,EAAE,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC;AACtC,EAAE,IAAI,UAAU,EAAE;AAClB,IAAI,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;AACxD,GAAG;AACH,CAAC,CAAC,CAAC;AACH;AACA,SAAS,kBAAkB,GAAG;AAC9B,EAAE,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC;AAChF,CAAC;AACD,kBAAkB,EAAE,CAAC;AACrB;AACA,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY;AACvD,EAAE,kBAAkB,EAAE,CAAC;AACvB,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC;AACnB,CAAC,CAAC,CAAC","file":"region-growing.js","sourcesContent":["import Map from '../src/ol/Map.js';\r\nimport RasterSource from '../src/ol/source/Raster.js';\r\nimport View from '../src/ol/View.js';\r\nimport XYZ from '../src/ol/source/XYZ.js';\r\nimport {Image as ImageLayer, Tile as TileLayer} from '../src/ol/layer.js';\r\nimport {fromLonLat} from '../src/ol/proj.js';\r\n\r\nfunction growRegion(inputs, data) {\r\n  const image = inputs[0];\r\n  let seed = data.pixel;\r\n  const delta = parseInt(data.delta);\r\n  if (!seed) {\r\n    return image;\r\n  }\r\n\r\n  seed = seed.map(Math.round);\r\n  const width = image.width;\r\n  const height = image.height;\r\n  const inputData = image.data;\r\n  const outputData = new Uint8ClampedArray(inputData);\r\n  const seedIdx = (seed[1] * width + seed[0]) * 4;\r\n  const seedR = inputData[seedIdx];\r\n  const seedG = inputData[seedIdx + 1];\r\n  const seedB = inputData[seedIdx + 2];\r\n  let edge = [seed];\r\n  while (edge.length) {\r\n    const newedge = [];\r\n    for (let i = 0, ii = edge.length; i < ii; i++) {\r\n      // As noted in the Raster source constructor, this function is provided\r\n      // using the `lib` option. Other functions will NOT be visible unless\r\n      // provided using the `lib` option.\r\n      const next = next4Edges(edge[i]);\r\n      for (let j = 0, jj = next.length; j < jj; j++) {\r\n        const s = next[j][0];\r\n        const t = next[j][1];\r\n        if (s >= 0 && s < width && t >= 0 && t < height) {\r\n          const ci = (t * width + s) * 4;\r\n          const cr = inputData[ci];\r\n          const cg = inputData[ci + 1];\r\n          const cb = inputData[ci + 2];\r\n          const ca = inputData[ci + 3];\r\n          // if alpha is zero, carry on\r\n          if (ca === 0) {\r\n            continue;\r\n          }\r\n          if (\r\n            Math.abs(seedR - cr) < delta &&\r\n            Math.abs(seedG - cg) < delta &&\r\n            Math.abs(seedB - cb) < delta\r\n          ) {\r\n            outputData[ci] = 255;\r\n            outputData[ci + 1] = 0;\r\n            outputData[ci + 2] = 0;\r\n            outputData[ci + 3] = 255;\r\n            newedge.push([s, t]);\r\n          }\r\n          // mark as visited\r\n          inputData[ci + 3] = 0;\r\n        }\r\n      }\r\n    }\r\n    edge = newedge;\r\n  }\r\n  return {data: outputData, width: width, height: height};\r\n}\r\n\r\nfunction next4Edges(edge) {\r\n  const x = edge[0];\r\n  const y = edge[1];\r\n  return [\r\n    [x + 1, y],\r\n    [x - 1, y],\r\n    [x, y + 1],\r\n    [x, y - 1],\r\n  ];\r\n}\r\n\r\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\r\nconst attributions =\r\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\r\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\r\n\r\nconst imagery = new TileLayer({\r\n  source: new XYZ({\r\n    attributions: attributions,\r\n    url: 'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=' + key,\r\n    maxZoom: 20,\r\n    crossOrigin: '',\r\n  }),\r\n});\r\n\r\nconst raster = new RasterSource({\r\n  sources: [imagery.getSource()],\r\n  operationType: 'image',\r\n  operation: growRegion,\r\n  // Functions in the `lib` object will be available to the operation run in\r\n  // the web worker.\r\n  lib: {\r\n    next4Edges: next4Edges,\r\n  },\r\n});\r\n\r\nconst rasterImage = new ImageLayer({\r\n  opacity: 0.7,\r\n  source: raster,\r\n});\r\n\r\nconst map = new Map({\r\n  layers: [imagery, rasterImage],\r\n  target: 'map',\r\n  view: new View({\r\n    center: fromLonLat([-119.07, 47.65]),\r\n    zoom: 11,\r\n  }),\r\n});\r\n\r\nlet coordinate;\r\n\r\nmap.on('click', function (event) {\r\n  coordinate = event.coordinate;\r\n  raster.changed();\r\n});\r\n\r\nconst thresholdControl = document.getElementById('threshold');\r\n\r\nraster.on('beforeoperations', function (event) {\r\n  // the event.data object will be passed to operations\r\n  const data = event.data;\r\n  data.delta = thresholdControl.value;\r\n  if (coordinate) {\r\n    data.pixel = map.getPixelFromCoordinate(coordinate);\r\n  }\r\n});\r\n\r\nfunction updateControlValue() {\r\n  document.getElementById('threshold-value').innerText = thresholdControl.value;\r\n}\r\nupdateControlValue();\r\n\r\nthresholdControl.addEventListener('input', function () {\r\n  updateControlValue();\r\n  raster.changed();\r\n});\r\n"],"sourceRoot":""}