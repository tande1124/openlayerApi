{"version":3,"sources":["webpack:///./osm-vector-tiles.js"],"names":["roadStyleCache","roadColor","buildingStyle","fill","color","opacity","stroke","width","waterStyle","layers","source","attributions","format","layerName","maxZoom","url","style","feature","resolution","get","const","kind","railway","sort_key","styleKey","zIndex","roadStyle","target","view","center","zoom"],"mappings":"4FAAA,iFAUMA,EAAiB,GACjBC,EAAY,CAChB,WAAc,OACd,WAAc,OACd,QAAW,QAEPC,EAAgB,IAAI,IAAM,CAC9BC,KAAM,IAAI,IAAK,CACbC,MAAO,OACPC,QAAS,KAEXC,OAAQ,IAAI,IAAO,CACjBF,MAAO,OACPG,MAAO,MAGLC,EAAa,IAAI,IAAM,CAC3BL,KAAM,IAAI,IAAK,CACbC,MAAO,cA8BC,IAAI,IAAI,CAClBK,OAAQ,CACN,IAAI,IAAgB,CAClBC,OAAQ,IAAI,IAAiB,CAC3BC,aACE,8FAEFC,OAAQ,IAAI,IAAS,CACnBC,UAAW,QACXJ,OAAQ,CAAC,QAAS,QAAS,eAE7BK,QAAS,GACTC,IACE,uGAGJC,MAAO,SAAUC,EAASC,GACxB,OAAQD,EAAQE,IAAI,UAClB,IAAK,QACH,OAAOX,EACT,IAAK,QACH,OAhDM,SAAUS,GAC1BG,IAMMhB,EAAOG,EANPc,EAAOJ,EAAQE,IAAI,QACnBG,EAAUL,EAAQE,IAAI,WACtBI,EAAWN,EAAQE,IAAI,YACvBK,EAAWH,EAAO,IAAMC,EAAU,IAAMC,EAC1CP,EAAQhB,EAAewB,GAmB3B,OAlBKR,IAECM,GACFlB,EAAQ,OACRG,EAAQ,IAERH,EAAQH,EAAUoB,GAClBd,EAAgB,WAARc,EAAoB,IAAM,GAEpCL,EAAQ,IAAI,IAAM,CAChBV,OAAQ,IAAI,IAAO,CACjBF,MAAOA,EACPG,MAAOA,IAETkB,OAAQF,IAEVvB,EAAewB,GAAYR,GAEtBA,EAwBUU,CAAUT,GACnB,IAAK,YACH,OAAOC,EAAa,GAAKhB,EAAgB,KAC3C,QACE,OAAO,UAKjByB,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,YAAW,EAAE,QAAS,UAC9Bf,QAAS,GACTgB,KAAM,S","file":"osm-vector-tiles.js","sourcesContent":["import Map from '../src/ol/Map.js';\r\nimport TopoJSON from '../src/ol/format/TopoJSON.js';\r\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\r\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\r\nimport View from '../src/ol/View.js';\r\nimport {Fill, Stroke, Style} from '../src/ol/style.js';\r\nimport {fromLonLat} from '../src/ol/proj.js';\r\n\r\nconst key = 'uZNs91nMR-muUTP99MyBSg';\r\n\r\nconst roadStyleCache = {};\r\nconst roadColor = {\r\n  'major_road': '#776',\r\n  'minor_road': '#ccb',\r\n  'highway': '#f39',\r\n};\r\nconst buildingStyle = new Style({\r\n  fill: new Fill({\r\n    color: '#666',\r\n    opacity: 0.4,\r\n  }),\r\n  stroke: new Stroke({\r\n    color: '#444',\r\n    width: 1,\r\n  }),\r\n});\r\nconst waterStyle = new Style({\r\n  fill: new Fill({\r\n    color: '#9db9e8',\r\n  }),\r\n});\r\nconst roadStyle = function (feature) {\r\n  const kind = feature.get('kind');\r\n  const railway = feature.get('railway');\r\n  const sort_key = feature.get('sort_key');\r\n  const styleKey = kind + '/' + railway + '/' + sort_key;\r\n  let style = roadStyleCache[styleKey];\r\n  if (!style) {\r\n    let color, width;\r\n    if (railway) {\r\n      color = '#7de';\r\n      width = 1;\r\n    } else {\r\n      color = roadColor[kind];\r\n      width = kind == 'highway' ? 1.5 : 1;\r\n    }\r\n    style = new Style({\r\n      stroke: new Stroke({\r\n        color: color,\r\n        width: width,\r\n      }),\r\n      zIndex: sort_key,\r\n    });\r\n    roadStyleCache[styleKey] = style;\r\n  }\r\n  return style;\r\n};\r\n\r\nconst map = new Map({\r\n  layers: [\r\n    new VectorTileLayer({\r\n      source: new VectorTileSource({\r\n        attributions:\r\n          '&copy; OpenStreetMap contributors, Whoâ€™s On First, ' +\r\n          'Natural Earth, and openstreetmapdata.com',\r\n        format: new TopoJSON({\r\n          layerName: 'layer',\r\n          layers: ['water', 'roads', 'buildings'],\r\n        }),\r\n        maxZoom: 19,\r\n        url:\r\n          'https://tile.nextzen.org/tilezen/vector/v1/all/{z}/{x}/{y}.topojson?api_key=' +\r\n          key,\r\n      }),\r\n      style: function (feature, resolution) {\r\n        switch (feature.get('layer')) {\r\n          case 'water':\r\n            return waterStyle;\r\n          case 'roads':\r\n            return roadStyle(feature);\r\n          case 'buildings':\r\n            return resolution < 10 ? buildingStyle : null;\r\n          default:\r\n            return null;\r\n        }\r\n      },\r\n    }),\r\n  ],\r\n  target: 'map',\r\n  view: new View({\r\n    center: fromLonLat([-74.0064, 40.7142]),\r\n    maxZoom: 19,\r\n    zoom: 15,\r\n  }),\r\n});\r\n"],"sourceRoot":""}