{"version":3,"sources":["webpack:///./geolocation.js"],"names":["view","center","zoom","map","layers","source","target","geolocation","trackingOptions","enableHighAccuracy","projection","getProjection","el","id","document","getElementById","addEventListener","setTracking","this","checked","on","innerText","getAccuracy","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","error","const","info","innerHTML","message","style","display","accuracyFeature","setGeometry","getAccuracyGeometry","positionFeature","setStyle","image","radius","fill","color","stroke","width","coordinates","getPosition","features"],"mappings":"2FAAA,gHASMA,EAAO,IAAI,IAAK,CACpBC,OAAQ,CAAC,EAAG,GACZC,KAAM,IAGFC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,OAGhBC,OAAQ,MACRN,KAAMA,IAGFO,EAAc,IAAI,IAAY,CAElCC,gBAAiB,CACfC,oBAAoB,GAEtBC,WAAYV,EAAKW,kBAGnB,SAASC,EAAGC,GACV,OAAOC,SAASC,eAAeF,GAGjCD,EAAG,SAASI,iBAAiB,UAAU,WACrCT,EAAYU,YAAYC,KAAKC,YAI/BZ,EAAYa,GAAG,UAAU,WACvBR,EAAG,YAAYS,UAAYd,EAAYe,cAAgB,OACvDV,EAAG,YAAYS,UAAYd,EAAYgB,cAAgB,OACvDX,EAAG,oBAAoBS,UAAYd,EAAYiB,sBAAwB,OACvEZ,EAAG,WAAWS,UAAYd,EAAYkB,aAAe,SACrDb,EAAG,SAASS,UAAYd,EAAYmB,WAAa,YAInDnB,EAAYa,GAAG,SAAS,SAAUO,GAChCC,IAAMC,EAAOf,SAASC,eAAe,QACrCc,EAAKC,UAAYH,EAAMI,QACvBF,EAAKG,MAAMC,QAAU,MAGvBL,IAAMM,EAAkB,IAAI,IAC5B3B,EAAYa,GAAG,2BAA2B,WACxCc,EAAgBC,YAAY5B,EAAY6B,0BAG1CR,IAAMS,EAAkB,IAAI,IAC5BA,EAAgBC,SACd,IAAI,IAAM,CACRC,MAAO,IAAI,IAAY,CACrBC,OAAQ,EACRC,KAAM,IAAI,IAAK,CACbC,MAAO,YAETC,OAAQ,IAAI,IAAO,CACjBD,MAAO,OACPE,MAAO,SAMfrC,EAAYa,GAAG,mBAAmB,WAChCQ,IAAMiB,EAActC,EAAYuC,cAChCT,EAAgBF,YAAYU,EAAc,IAAI,IAAMA,GAAe,SAGrE,IAAI,IAAY,CACd1C,IAAKA,EACLE,OAAQ,IAAI,IAAa,CACvB0C,SAAU,CAACb,EAAiBG,S","file":"geolocation.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\r\nimport Geolocation from '../src/ol/Geolocation.js';\r\nimport Map from '../src/ol/Map.js';\r\nimport Point from '../src/ol/geom/Point.js';\r\nimport View from '../src/ol/View.js';\r\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\r\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\r\n\r\nconst view = new View({\r\n  center: [0, 0],\r\n  zoom: 2,\r\n});\r\n\r\nconst map = new Map({\r\n  layers: [\r\n    new TileLayer({\r\n      source: new OSM(),\r\n    }),\r\n  ],\r\n  target: 'map',\r\n  view: view,\r\n});\r\n\r\nconst geolocation = new Geolocation({\r\n  // enableHighAccuracy must be set to true to have the heading value.\r\n  trackingOptions: {\r\n    enableHighAccuracy: true,\r\n  },\r\n  projection: view.getProjection(),\r\n});\r\n\r\nfunction el(id) {\r\n  return document.getElementById(id);\r\n}\r\n\r\nel('track').addEventListener('change', function () {\r\n  geolocation.setTracking(this.checked);\r\n});\r\n\r\n// update the HTML page when the position changes.\r\ngeolocation.on('change', function () {\r\n  el('accuracy').innerText = geolocation.getAccuracy() + ' [m]';\r\n  el('altitude').innerText = geolocation.getAltitude() + ' [m]';\r\n  el('altitudeAccuracy').innerText = geolocation.getAltitudeAccuracy() + ' [m]';\r\n  el('heading').innerText = geolocation.getHeading() + ' [rad]';\r\n  el('speed').innerText = geolocation.getSpeed() + ' [m/s]';\r\n});\r\n\r\n// handle geolocation error.\r\ngeolocation.on('error', function (error) {\r\n  const info = document.getElementById('info');\r\n  info.innerHTML = error.message;\r\n  info.style.display = '';\r\n});\r\n\r\nconst accuracyFeature = new Feature();\r\ngeolocation.on('change:accuracyGeometry', function () {\r\n  accuracyFeature.setGeometry(geolocation.getAccuracyGeometry());\r\n});\r\n\r\nconst positionFeature = new Feature();\r\npositionFeature.setStyle(\r\n  new Style({\r\n    image: new CircleStyle({\r\n      radius: 6,\r\n      fill: new Fill({\r\n        color: '#3399CC',\r\n      }),\r\n      stroke: new Stroke({\r\n        color: '#fff',\r\n        width: 2,\r\n      }),\r\n    }),\r\n  })\r\n);\r\n\r\ngeolocation.on('change:position', function () {\r\n  const coordinates = geolocation.getPosition();\r\n  positionFeature.setGeometry(coordinates ? new Point(coordinates) : null);\r\n});\r\n\r\nnew VectorLayer({\r\n  map: map,\r\n  source: new VectorSource({\r\n    features: [accuracyFeature, positionFeature],\r\n  }),\r\n});\r\n"],"sourceRoot":""}