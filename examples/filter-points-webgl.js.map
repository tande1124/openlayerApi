{"version":3,"sources":["webpack:///./filter-points-webgl.js"],"names":["vectorSource","attributions","animRatio","style","variables","minYear","maxYear","filter","symbol","symbolType","size","color","opacity","minYearInput","document","getElementById","maxYearInput","updateMinYear","parseInt","value","updateStatusText","updateMaxYear","const","div","querySelector","textContent","addEventListener","client","XMLHttpRequest","open","onload","curIndex","csv","responseText","features","prevIndex","indexOf","line","substr","split","coords","parseFloat","isNaN","push","mass","year","geometry","addFeatures","send","map","layers","source","layer","disableHitDetection","target","view","center","zoom","animate","render","window","requestAnimationFrame"],"mappings":"2FAAA,gFAUMA,EAAe,IAAI,IAAO,CAC9BC,aAAc,SAMVC,EAAY,CAChB,IACA,CACE,IACA,CACE,IACA,CACE,IACA,CAAC,QACD,CAAC,cAAe,CAAC,UAAW,CAAC,MAAO,QAAS,KAAM,EAAG,KAV/C,aAgBb,IAGIC,EAAQ,CACZC,UAAW,CACTC,QAAS,KACTC,QAAS,MAEXC,OAAQ,CAAC,UAAW,CAAC,MAAO,QAAS,CAAC,MAAO,WAAY,CAAC,MAAO,YACjEC,OAAQ,CACNC,WAAY,SACZC,KAAM,CACJ,IACA,CAAC,cAAe,CAAC,UAAW,CAAC,MAAO,QAAS,EAAG,EAAG,IAAQ,IAC3D,CAAC,IAAK,KAAM,CAAC,IAAKR,EAAW,OAE/BS,MAAO,CAAC,cAAe,CAAC,UAAWT,EAAW,EAjCjC,UAiC8C,EAlC9C,wBAmCbU,QAAS,CAAC,IAAK,EAAK,CAAC,IAAKV,EAAW,QAKnCW,EAAeC,SAASC,eAAe,YACvCC,EAAeF,SAASC,eAAe,YAE7C,SAASE,IACPd,EAAMC,UAAUC,QAAUa,SAASL,EAAaM,OAChDC,IAEF,SAASC,IACPlB,EAAMC,UAAUE,QAAUY,SAASF,EAAaG,OAChDC,IAEF,SAASA,IACPE,IAAMC,EAAMT,SAASC,eAAe,UACpCQ,EAAIC,cAAc,iBAAiBC,YAAcZ,EAAaM,MAC9DI,EAAIC,cAAc,iBAAiBC,YAAcT,EAAaG,MAGhEN,EAAaa,iBAAiB,QAAST,GACvCJ,EAAaa,iBAAiB,SAAUT,GACxCD,EAAaU,iBAAiB,QAASL,GACvCL,EAAaU,iBAAiB,SAAUL,GACxCD,IAGAE,IAAMK,EAAS,IAAIC,eACnBD,EAAOE,KAAK,MAAO,mCACnBF,EAAOG,OAAS,WAOd,IANAR,IAKIS,EALEC,EAAML,EAAOM,aACbC,EAAW,GAEbC,EAAYH,EAAII,QAAQ,MAAQ,GAGiB,IAA7CL,EAAWC,EAAII,QAAQ,KAAMD,KAAmB,CACtDb,IAAMe,EAAOL,EAAIM,OAAOH,EAAWJ,EAAWI,GAAWI,MAAM,KAC/DJ,EAAYJ,EAAW,EAEvBT,IAAMkB,EAAS,YAAW,CAACC,WAAWJ,EAAK,IAAKI,WAAWJ,EAAK,MAC5DK,MAAMF,EAAO,KAAOE,MAAMF,EAAO,KAKrCN,EAASS,KACP,IAAI,IAAQ,CACVC,KAAMH,WAAWJ,EAAK,KAAO,EAC7BQ,KAAM3B,SAASmB,EAAK,KAAO,EAC3BS,SAAU,IAAI,IAAMN,MAK1BxC,EAAa+C,YAAYb,IAE3BP,EAAOqB,OAEP1B,IAAM2B,EAAM,IAAI,IAAI,CAClBC,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,IAAO,CACjBC,MAAO,YAGX,IAAI,IAAiB,CACnBjD,MAAOA,EACPgD,OAAQnD,EACRqD,qBAAqB,KAGzBC,OAAQxC,SAASC,eAAe,OAChCwC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,OAKV,SAASC,IACPT,EAAIU,SACJC,OAAOC,sBAAsBH,GAE/BA,K","file":"filter-points-webgl.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\r\nimport Map from '../src/ol/Map.js';\r\nimport Point from '../src/ol/geom/Point.js';\r\nimport Stamen from '../src/ol/source/Stamen.js';\r\nimport TileLayer from '../src/ol/layer/Tile.js';\r\nimport View from '../src/ol/View.js';\r\nimport WebGLPointsLayer from '../src/ol/layer/WebGLPoints.js';\r\nimport {Vector} from '../src/ol/source.js';\r\nimport {fromLonLat} from '../src/ol/proj.js';\r\n\r\nconst vectorSource = new Vector({\r\n  attributions: 'NASA',\r\n});\r\n\r\nconst oldColor = 'rgba(242,56,22,0.61)';\r\nconst newColor = '#ffe52c';\r\nconst period = 12; // animation period in seconds\r\nconst animRatio = [\r\n  '^',\r\n  [\r\n    '/',\r\n    [\r\n      '%',\r\n      [\r\n        '+',\r\n        ['time'],\r\n        ['interpolate', ['linear'], ['get', 'year'], 1850, 0, 2015, period],\r\n      ],\r\n      period,\r\n    ],\r\n    period,\r\n  ],\r\n  0.5,\r\n];\r\n\r\nconst style = {\r\n  variables: {\r\n    minYear: 1850,\r\n    maxYear: 2015,\r\n  },\r\n  filter: ['between', ['get', 'year'], ['var', 'minYear'], ['var', 'maxYear']],\r\n  symbol: {\r\n    symbolType: 'circle',\r\n    size: [\r\n      '*',\r\n      ['interpolate', ['linear'], ['get', 'mass'], 0, 8, 200000, 26],\r\n      ['-', 1.75, ['*', animRatio, 0.75]],\r\n    ],\r\n    color: ['interpolate', ['linear'], animRatio, 0, newColor, 1, oldColor],\r\n    opacity: ['-', 1.0, ['*', animRatio, 0.75]],\r\n  },\r\n};\r\n\r\n// handle input values & events\r\nconst minYearInput = document.getElementById('min-year');\r\nconst maxYearInput = document.getElementById('max-year');\r\n\r\nfunction updateMinYear() {\r\n  style.variables.minYear = parseInt(minYearInput.value);\r\n  updateStatusText();\r\n}\r\nfunction updateMaxYear() {\r\n  style.variables.maxYear = parseInt(maxYearInput.value);\r\n  updateStatusText();\r\n}\r\nfunction updateStatusText() {\r\n  const div = document.getElementById('status');\r\n  div.querySelector('span.min-year').textContent = minYearInput.value;\r\n  div.querySelector('span.max-year').textContent = maxYearInput.value;\r\n}\r\n\r\nminYearInput.addEventListener('input', updateMinYear);\r\nminYearInput.addEventListener('change', updateMinYear);\r\nmaxYearInput.addEventListener('input', updateMaxYear);\r\nmaxYearInput.addEventListener('change', updateMaxYear);\r\nupdateStatusText();\r\n\r\n// load data\r\nconst client = new XMLHttpRequest();\r\nclient.open('GET', 'data/csv/meteorite_landings.csv');\r\nclient.onload = function () {\r\n  const csv = client.responseText;\r\n  const features = [];\r\n\r\n  let prevIndex = csv.indexOf('\\n') + 1; // scan past the header line\r\n\r\n  let curIndex;\r\n  while ((curIndex = csv.indexOf('\\n', prevIndex)) != -1) {\r\n    const line = csv.substr(prevIndex, curIndex - prevIndex).split(',');\r\n    prevIndex = curIndex + 1;\r\n\r\n    const coords = fromLonLat([parseFloat(line[4]), parseFloat(line[3])]);\r\n    if (isNaN(coords[0]) || isNaN(coords[1])) {\r\n      // guard against bad data\r\n      continue;\r\n    }\r\n\r\n    features.push(\r\n      new Feature({\r\n        mass: parseFloat(line[1]) || 0,\r\n        year: parseInt(line[2]) || 0,\r\n        geometry: new Point(coords),\r\n      })\r\n    );\r\n  }\r\n\r\n  vectorSource.addFeatures(features);\r\n};\r\nclient.send();\r\n\r\nconst map = new Map({\r\n  layers: [\r\n    new TileLayer({\r\n      source: new Stamen({\r\n        layer: 'toner',\r\n      }),\r\n    }),\r\n    new WebGLPointsLayer({\r\n      style: style,\r\n      source: vectorSource,\r\n      disableHitDetection: true,\r\n    }),\r\n  ],\r\n  target: document.getElementById('map'),\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 2,\r\n  }),\r\n});\r\n\r\n// animate the map\r\nfunction animate() {\r\n  map.render();\r\n  window.requestAnimationFrame(animate);\r\n}\r\nanimate();\r\n"],"sourceRoot":""}