{"version":3,"sources":["webpack:///./hit-tolerance.js"],"names":["hitTolerance","raster","source","style","stroke","color","width","feature","vector","features","map","layers","target","view","center","zoom","statusElement","document","getElementById","on","e","let","hit","forEachFeatureAtPixel","pixel","getStroke","setColor","innerHTML","changed","const","selectHitToleranceElement","circleCanvas","changeHitTolerance","size","parseInt","value","height","ctx","getContext","clearRect","beginPath","arc","Math","PI","fill","onchange"],"mappings":"2FAAA,WA0CIA,EA1CJ,4EAQMC,EAAS,IAAI,IAAU,CAC3BC,OAAQ,IAAI,MAGRC,EAAQ,IAAI,IAAM,CACtBC,OAAQ,IAAI,IAAO,CACjBC,MAAO,QACPC,MAAO,MAILC,EAAU,IAAI,IAClB,IAAI,IAAW,CACb,EAAE,IAAS,GACX,CAAC,IAAS,MAIRC,EAAS,IAAI,IAAY,CAC7BN,OAAQ,IAAI,IAAa,CACvBO,SAAU,CAACF,KAEbJ,MAAOA,IAGHO,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACV,EAAQO,GACjBI,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAMJC,EAAgBC,SAASC,eAAe,UAE9CR,EAAIS,GAAG,eAAe,SAAUC,GAC9BC,IAAIC,GAAM,EACVZ,EAAIa,sBACFH,EAAEI,OACF,WACEF,GAAM,IAER,CACEtB,aAAcA,IAGdsB,GACFnB,EAAMsB,YAAYC,SAAS,SAC3BV,EAAcW,UAAY,uBAE1BxB,EAAMsB,YAAYC,SAAS,SAC3BV,EAAcW,UAAY,uBAE5BpB,EAAQqB,aAGVC,IAAMC,EAA4Bb,SAASC,eAAe,gBACpDa,EAAed,SAASC,eAAe,UAEvCc,EAAqB,WAGzBH,IAAMI,EAAO,GAFbjC,EAAekC,SAASJ,EAA0BK,MAAO,KAEzB,EAChCJ,EAAazB,MAAQ2B,EACrBF,EAAaK,OAASH,EACtBJ,IAAMQ,EAAMN,EAAaO,WAAW,MACpCD,EAAIE,UAAU,EAAG,EAAGN,EAAMA,GAC1BI,EAAIG,YACJH,EAAII,IACFzC,EAAe,EACfA,EAAe,EACfA,EAAe,GACf,EACA,EAAI0C,KAAKC,IAEXN,EAAIO,OACJP,EAAIjC,UAGN0B,EAA0Be,SAAWb,EACrCA,M","file":"hit-tolerance.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\r\nimport LineString from '../src/ol/geom/LineString.js';\r\nimport Map from '../src/ol/Map.js';\r\nimport View from '../src/ol/View.js';\r\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\r\nimport {Stroke, Style} from '../src/ol/style.js';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\r\n\r\nconst raster = new TileLayer({\r\n  source: new OSM(),\r\n});\r\n\r\nconst style = new Style({\r\n  stroke: new Stroke({\r\n    color: 'black',\r\n    width: 1,\r\n  }),\r\n});\r\n\r\nconst feature = new Feature(\r\n  new LineString([\r\n    [-4000000, 0],\r\n    [4000000, 0],\r\n  ])\r\n);\r\n\r\nconst vector = new VectorLayer({\r\n  source: new VectorSource({\r\n    features: [feature],\r\n  }),\r\n  style: style,\r\n});\r\n\r\nconst map = new Map({\r\n  layers: [raster, vector],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 2,\r\n  }),\r\n});\r\n\r\nlet hitTolerance;\r\n\r\nconst statusElement = document.getElementById('status');\r\n\r\nmap.on('singleclick', function (e) {\r\n  let hit = false;\r\n  map.forEachFeatureAtPixel(\r\n    e.pixel,\r\n    function () {\r\n      hit = true;\r\n    },\r\n    {\r\n      hitTolerance: hitTolerance,\r\n    }\r\n  );\r\n  if (hit) {\r\n    style.getStroke().setColor('green');\r\n    statusElement.innerHTML = 'A feature got hit!';\r\n  } else {\r\n    style.getStroke().setColor('black');\r\n    statusElement.innerHTML = 'No feature got hit.';\r\n  }\r\n  feature.changed();\r\n});\r\n\r\nconst selectHitToleranceElement = document.getElementById('hitTolerance');\r\nconst circleCanvas = document.getElementById('circle');\r\n\r\nconst changeHitTolerance = function () {\r\n  hitTolerance = parseInt(selectHitToleranceElement.value, 10);\r\n\r\n  const size = 2 * hitTolerance + 2;\r\n  circleCanvas.width = size;\r\n  circleCanvas.height = size;\r\n  const ctx = circleCanvas.getContext('2d');\r\n  ctx.clearRect(0, 0, size, size);\r\n  ctx.beginPath();\r\n  ctx.arc(\r\n    hitTolerance + 1,\r\n    hitTolerance + 1,\r\n    hitTolerance + 0.5,\r\n    0,\r\n    2 * Math.PI\r\n  );\r\n  ctx.fill();\r\n  ctx.stroke();\r\n};\r\n\r\nselectHitToleranceElement.onchange = changeHitTolerance;\r\nchangeHitTolerance();\r\n"],"sourceRoot":""}