{"version":3,"sources":["webpack:///./wms-image-custom-proj.js"],"names":["defs","const","projection","code","extent","layers","source","url","crossOrigin","attributions","params","serverType","controls","extend","target","view","center","zoom"],"mappings":"4FAAA,2FAuBA,IAAMA,KACJ,aACA,wLAIF,YAAS,KAETC,IAAMC,EAAa,IAAI,IAAW,CAChCC,KAAM,aACNC,OAAQ,CAAC,YAAa,WAAY,YAAa,eAG3CA,EAAS,CAAC,KAAQ,IAAO,IAAQ,MACjCC,EAAS,CACb,IAAI,IAAW,CACbD,OAAQA,EACRE,OAAQ,IAAI,IAAS,CACnBC,IAAK,4BACLC,YAAa,YACbC,aACE,oIAEFC,OAAQ,CACN,OAAU,+CACV,OAAU,cAEZC,WAAY,gBAGhB,IAAI,IAAW,CACbP,OAAQA,EACRE,OAAQ,IAAI,IAAS,CACnBC,IAAK,4BACLC,YAAa,YACbC,aACE,kIAEFC,OAAQ,CAAC,OAAU,uCACnBC,WAAY,iBAKN,IAAI,IAAI,CAClBC,SAAU,cAAkBC,OAAO,CAAC,IAAI,MACxCR,OAAQA,EACRS,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbb,WAAYA,EACZc,OAAQ,YAAW,CAAC,KAAM,OAAQd,GAClCE,OAAQA,EACRa,KAAM,Q","file":"wms-image-custom-proj.js","sourcesContent":["import ImageLayer from '../src/ol/layer/Image.js';\r\nimport ImageWMS from '../src/ol/source/ImageWMS.js';\r\nimport Map from '../src/ol/Map.js';\r\nimport Projection from '../src/ol/proj/Projection.js';\r\nimport View from '../src/ol/View.js';\r\nimport proj4 from 'proj4';\r\nimport {ScaleLine, defaults as defaultControls} from '../src/ol/control.js';\r\nimport {fromLonLat} from '../src/ol/proj.js';\r\nimport {register} from '../src/ol/proj/proj4.js';\r\n\r\n// Transparent Proj4js support:\r\n//\r\n// EPSG:21781 is known to Proj4js because its definition is registered by\r\n// calling proj4.defs(). Now when we create an ol/proj/Projection instance with\r\n// the 'EPSG:21781' code, OpenLayers will pick up the transform functions from\r\n// Proj4js. To get the registered ol/proj/Projection instance with other\r\n// parameters like units and axis orientation applied from Proj4js, use\r\n// `ol/proj#get('EPSG:21781')`.\r\n//\r\n// Note that we are setting the projection's extent here, which is used to\r\n// determine the view resolution for zoom level 0. Recommended values for a\r\n// projection's validity extent can be found at https://epsg.io/.\r\n\r\nproj4.defs(\r\n  'EPSG:21781',\r\n  '+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 ' +\r\n    '+x_0=600000 +y_0=200000 +ellps=bessel ' +\r\n    '+towgs84=660.077,13.551,369.344,2.484,1.783,2.939,5.66 +units=m +no_defs'\r\n);\r\nregister(proj4);\r\n\r\nconst projection = new Projection({\r\n  code: 'EPSG:21781',\r\n  extent: [485869.5728, 76443.1884, 837076.5648, 299941.7864],\r\n});\r\n\r\nconst extent = [420000, 30000, 900000, 350000];\r\nconst layers = [\r\n  new ImageLayer({\r\n    extent: extent,\r\n    source: new ImageWMS({\r\n      url: 'https://wms.geo.admin.ch/',\r\n      crossOrigin: 'anonymous',\r\n      attributions:\r\n        '© <a href=\"https://shop.swisstopo.admin.ch/en/products/maps/national/lk1000\"' +\r\n        'target=\"_blank\">Pixelmap 1:1000000 / geo.admin.ch</a>',\r\n      params: {\r\n        'LAYERS': 'ch.swisstopo.pixelkarte-farbe-pk1000.noscale',\r\n        'FORMAT': 'image/jpeg',\r\n      },\r\n      serverType: 'mapserver',\r\n    }),\r\n  }),\r\n  new ImageLayer({\r\n    extent: extent,\r\n    source: new ImageWMS({\r\n      url: 'https://wms.geo.admin.ch/',\r\n      crossOrigin: 'anonymous',\r\n      attributions:\r\n        '© <a href=\"https://www.hydrodaten.admin.ch/en/notes-on-the-flood-alert-maps.html\"' +\r\n        'target=\"_blank\">Flood Alert / geo.admin.ch</a>',\r\n      params: {'LAYERS': 'ch.bafu.hydroweb-warnkarte_national'},\r\n      serverType: 'mapserver',\r\n    }),\r\n  }),\r\n];\r\n\r\nconst map = new Map({\r\n  controls: defaultControls().extend([new ScaleLine()]),\r\n  layers: layers,\r\n  target: 'map',\r\n  view: new View({\r\n    projection: projection,\r\n    center: fromLonLat([8.23, 46.86], projection),\r\n    extent: extent,\r\n    zoom: 2,\r\n  }),\r\n});\r\n"],"sourceRoot":""}