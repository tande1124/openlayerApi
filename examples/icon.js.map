{"version":3,"sources":["webpack:///./icon.js"],"names":["iconFeature","geometry","name","population","rainfall","iconStyle","image","anchor","anchorXUnits","anchorYUnits","src","setStyle","const","vectorSource","features","vectorLayer","source","rasterLayer","url","crossOrigin","map","layers","target","document","getElementById","view","center","zoom","element","popup","positioning","stopEvent","offset","addOverlay","on","evt","feature","forEachFeatureAtPixel","pixel","coordinates","getGeometry","getCoordinates","setPosition","$","popover","placement","html","content","get","e","dragging","getEventPixel","originalEvent","hit","hasFeatureAtPixel","getTarget","style","cursor"],"mappings":"2FAAA,gGAUMA,EAAc,IAAI,IAAQ,CAC9BC,SAAU,IAAI,IAAM,CAAC,EAAG,IACxBC,KAAM,cACNC,WAAY,IACZC,SAAU,MAGNC,EAAY,IAAI,IAAM,CAC1BC,MAAO,IAAI,IAAK,CACdC,OAAQ,CAAC,GAAK,IACdC,aAAc,WACdC,aAAc,SACdC,IAAK,oBAITV,EAAYW,SAASN,GAErBO,IAAMC,EAAe,IAAI,IAAa,CACpCC,SAAU,CAACd,KAGPe,EAAc,IAAI,IAAY,CAClCC,OAAQH,IAGJI,EAAc,IAAI,IAAU,CAChCD,OAAQ,IAAI,IAAS,CACnBE,IAAK,6DACLC,YAAa,OAIXC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACJ,EAAaF,GACtBO,OAAQC,SAASC,eAAe,OAChCC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAUL,SAASC,eAAe,SAElCK,EAAQ,IAAI,IAAQ,CACxBD,QAASA,EACTE,YAAa,gBACbC,WAAW,EACXC,OAAQ,CAAC,GAAI,MAEfZ,EAAIa,WAAWJ,GAGfT,EAAIc,GAAG,SAAS,SAAUC,GACxBvB,IAAMwB,EAAUhB,EAAIiB,sBAAsBF,EAAIG,OAAO,SAAUF,GAC7D,OAAOA,KAET,GAAIA,EAAS,CACXxB,IAAM2B,EAAcH,EAAQI,cAAcC,iBAC1CZ,EAAMa,YAAYH,GAClBI,EAAEf,GAASgB,QAAQ,CACjBC,UAAW,MACXC,MAAM,EACNC,QAASX,EAAQY,IAAI,UAEvBL,EAAEf,GAASgB,QAAQ,aAEnBD,EAAEf,GAASgB,QAAQ,cAKvBxB,EAAIc,GAAG,eAAe,SAAUe,GAC9B,GAAIA,EAAEC,SACJP,EAAEf,GAASgB,QAAQ,eADrB,CAIAhC,IAAM0B,EAAQlB,EAAI+B,cAAcF,EAAEG,eAC5BC,EAAMjC,EAAIkC,kBAAkBhB,GAClClB,EAAImC,YAAYC,MAAMC,OAASJ,EAAM,UAAY,S","file":"icon.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\r\nimport Map from '../src/ol/Map.js';\r\nimport Overlay from '../src/ol/Overlay.js';\r\nimport Point from '../src/ol/geom/Point.js';\r\nimport TileJSON from '../src/ol/source/TileJSON.js';\r\nimport VectorSource from '../src/ol/source/Vector.js';\r\nimport View from '../src/ol/View.js';\r\nimport {Icon, Style} from '../src/ol/style.js';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\r\n\r\nconst iconFeature = new Feature({\r\n  geometry: new Point([0, 0]),\r\n  name: 'Null Island',\r\n  population: 4000,\r\n  rainfall: 500,\r\n});\r\n\r\nconst iconStyle = new Style({\r\n  image: new Icon({\r\n    anchor: [0.5, 46],\r\n    anchorXUnits: 'fraction',\r\n    anchorYUnits: 'pixels',\r\n    src: 'data/icon.png',\r\n  }),\r\n});\r\n\r\niconFeature.setStyle(iconStyle);\r\n\r\nconst vectorSource = new VectorSource({\r\n  features: [iconFeature],\r\n});\r\n\r\nconst vectorLayer = new VectorLayer({\r\n  source: vectorSource,\r\n});\r\n\r\nconst rasterLayer = new TileLayer({\r\n  source: new TileJSON({\r\n    url: 'https://a.tiles.mapbox.com/v3/aj.1x1-degrees.json?secure=1',\r\n    crossOrigin: '',\r\n  }),\r\n});\r\n\r\nconst map = new Map({\r\n  layers: [rasterLayer, vectorLayer],\r\n  target: document.getElementById('map'),\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 3,\r\n  }),\r\n});\r\n\r\nconst element = document.getElementById('popup');\r\n\r\nconst popup = new Overlay({\r\n  element: element,\r\n  positioning: 'bottom-center',\r\n  stopEvent: false,\r\n  offset: [0, -50],\r\n});\r\nmap.addOverlay(popup);\r\n\r\n// display popup on click\r\nmap.on('click', function (evt) {\r\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\r\n    return feature;\r\n  });\r\n  if (feature) {\r\n    const coordinates = feature.getGeometry().getCoordinates();\r\n    popup.setPosition(coordinates);\r\n    $(element).popover({\r\n      placement: 'top',\r\n      html: true,\r\n      content: feature.get('name'),\r\n    });\r\n    $(element).popover('show');\r\n  } else {\r\n    $(element).popover('dispose');\r\n  }\r\n});\r\n\r\n// change mouse cursor when over marker\r\nmap.on('pointermove', function (e) {\r\n  if (e.dragging) {\r\n    $(element).popover('dispose');\r\n    return;\r\n  }\r\n  const pixel = map.getEventPixel(e.originalEvent);\r\n  const hit = map.hasFeatureAtPixel(pixel);\r\n  map.getTarget().style.cursor = hit ? 'pointer' : '';\r\n});\r\n"],"sourceRoot":""}