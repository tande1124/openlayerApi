{"version":3,"sources":["webpack:///./layer-group.js"],"names":["key","setup","id","group","getLayers","forEach","layer","i","const","layerid","visibilityInput","$","on","setVisible","this","checked","prop","getVisible","opacityInput","setOpacity","parseFloat","value","val","String","getOpacity","bindInputs","layers","source","url","crossOrigin","target","view","center","zoom","getLayerGroup","click","siblings","toggle","hide"],"mappings":"2FAAA,+DAOMA,EACJ,8FAgDF,SAASC,EAAMC,EAAIC,GACjBA,EAAMC,YAAYC,SAAQ,SAAUC,EAAOC,GACzCC,IAAMC,EAAUP,EAAKK,GAfzB,SAAoBE,EAASH,GAC3BE,IAAME,EAAkBC,EAAEF,EAAU,kBACpCC,EAAgBE,GAAG,UAAU,WAC3BN,EAAMO,WAAWC,KAAKC,YAExBL,EAAgBM,KAAK,UAAWV,EAAMW,cAEtCT,IAAMU,EAAeP,EAAEF,EAAU,kBACjCS,EAAaN,GAAG,SAAS,WACvBN,EAAMa,WAAWC,WAAWN,KAAKO,WAEnCH,EAAaI,IAAIC,OAAOjB,EAAMkB,eAK5BC,CAAWhB,EAASH,GAChBA,aAAiB,KACnBL,EAAMQ,EAASH,MAIrBL,CAAM,SAvDM,IAAI,IAAI,CAClByB,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,MAEd,IAAI,IAAW,CACbD,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,IAAS,CACnBC,IACE,sGACA5B,EACF6B,YAAa,gBAGjB,IAAI,IAAU,CACZF,OAAQ,IAAI,IAAS,CACnBC,IACE,uFACA5B,EACF6B,YAAa,oBAMvBC,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,YAAW,CAAC,QAAS,UAC7BC,KAAM,MA0BUC,iBAEpBvB,EAAE,wBACCwB,OAAM,WACLxB,EAAEG,MAAMsB,SAAS,YAAYC,YAE9BD,SAAS,YACTE,S","file":"layer-group.js","sourcesContent":["import Map from '../src/ol/Map.js';\r\nimport OSM from '../src/ol/source/OSM.js';\r\nimport TileJSON from '../src/ol/source/TileJSON.js';\r\nimport View from '../src/ol/View.js';\r\nimport {Group as LayerGroup, Tile as TileLayer} from '../src/ol/layer.js';\r\nimport {fromLonLat} from '../src/ol/proj.js';\r\n\r\nconst key =\r\n  'pk.eyJ1IjoiYWhvY2V2YXIiLCJhIjoiY2pzbmg0Nmk5MGF5NzQzbzRnbDNoeHJrbiJ9.7_-_gL8ur7ZtEiNwRfCy7Q';\r\n\r\nconst map = new Map({\r\n  layers: [\r\n    new TileLayer({\r\n      source: new OSM(),\r\n    }),\r\n    new LayerGroup({\r\n      layers: [\r\n        new TileLayer({\r\n          source: new TileJSON({\r\n            url:\r\n              'https://api.tiles.mapbox.com/v4/mapbox.20110804-hoa-foodinsecurity-3month.json?secure&access_token=' +\r\n              key,\r\n            crossOrigin: 'anonymous',\r\n          }),\r\n        }),\r\n        new TileLayer({\r\n          source: new TileJSON({\r\n            url:\r\n              'https://api.tiles.mapbox.com/v4/mapbox.world-borders-light.json?secure&access_token=' +\r\n              key,\r\n            crossOrigin: 'anonymous',\r\n          }),\r\n        }),\r\n      ],\r\n    }),\r\n  ],\r\n  target: 'map',\r\n  view: new View({\r\n    center: fromLonLat([37.4057, 8.81566]),\r\n    zoom: 4,\r\n  }),\r\n});\r\n\r\nfunction bindInputs(layerid, layer) {\r\n  const visibilityInput = $(layerid + ' input.visible');\r\n  visibilityInput.on('change', function () {\r\n    layer.setVisible(this.checked);\r\n  });\r\n  visibilityInput.prop('checked', layer.getVisible());\r\n\r\n  const opacityInput = $(layerid + ' input.opacity');\r\n  opacityInput.on('input', function () {\r\n    layer.setOpacity(parseFloat(this.value));\r\n  });\r\n  opacityInput.val(String(layer.getOpacity()));\r\n}\r\nfunction setup(id, group) {\r\n  group.getLayers().forEach(function (layer, i) {\r\n    const layerid = id + i;\r\n    bindInputs(layerid, layer);\r\n    if (layer instanceof LayerGroup) {\r\n      setup(layerid, layer);\r\n    }\r\n  });\r\n}\r\nsetup('#layer', map.getLayerGroup());\r\n\r\n$('#layertree li > span')\r\n  .click(function () {\r\n    $(this).siblings('fieldset').toggle();\r\n  })\r\n  .siblings('fieldset')\r\n  .hide();\r\n"],"sourceRoot":""}