{"version":3,"sources":["webpack:///./drag-and-drop-image-vector.js"],"names":["dragAndDropInteraction","formatConstructors","map","interactions","extend","layers","source","attributions","url","maxZoom","target","view","center","zoom","on","event","const","vectorSource","features","addLayer","getView","fit","getExtent","displayFeatureInfo","pixel","forEachFeatureAtPixel","feature","push","length","i","ii","info","get","document","getElementById","innerHTML","join","evt","dragging","getEventPixel","originalEvent"],"mappings":"2FAAA,qHAaMA,EAAyB,IAAI,IAAY,CAC7CC,mBAAoB,CAAC,IAAK,IAAS,IAAK,IAAK,OAQzCC,EAAM,IAAI,IAAI,CAClBC,aAAc,cAAsBC,OAAO,CAACJ,IAC5CK,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,IAAI,CACdC,aARN,4LASMC,IACE,iGACFC,QAAS,QAIfC,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIVb,EAAuBc,GAAG,eAAe,SAAUC,GACjDC,IAAMC,EAAe,IAAI,IAAa,CACpCC,SAAUH,EAAMG,WAElBhB,EAAIiB,SACF,IAAI,IAAiB,CACnBb,OAAQW,KAGZf,EAAIkB,UAAUC,IAAIJ,EAAaK,gBAGjCN,IAAMO,EAAqB,SAAUC,GACnCR,IAAME,EAAW,GAIjB,GAHAhB,EAAIuB,sBAAsBD,GAAO,SAAUE,GACzCR,EAASS,KAAKD,MAEZR,EAASU,OAAS,EAAG,CACvBZ,IACIa,EAAGC,EADDC,EAAO,GAEb,IAAKF,EAAI,EAAGC,EAAKZ,EAASU,OAAQC,EAAIC,IAAMD,EAC1CE,EAAKJ,KAAKT,EAASW,GAAGG,IAAI,SAE5BC,SAASC,eAAe,QAAQC,UAAYJ,EAAKK,KAAK,OAAS,aAE/DH,SAASC,eAAe,QAAQC,UAAY,UAIhDjC,EAAIY,GAAG,eAAe,SAAUuB,GAC9B,IAAIA,EAAIC,SAAR,CAGAtB,IAAMQ,EAAQtB,EAAIqC,cAAcF,EAAIG,eACpCjB,EAAmBC,OAGrBtB,EAAIY,GAAG,SAAS,SAAUuB,GACxBd,EAAmBc,EAAIb,Y","file":"drag-and-drop-image-vector.js","sourcesContent":["import Map from '../src/ol/Map.js';\r\nimport View from '../src/ol/View.js';\r\nimport {\r\n  DragAndDrop,\r\n  defaults as defaultInteractions,\r\n} from '../src/ol/interaction.js';\r\nimport {GPX, GeoJSON, IGC, KML, TopoJSON} from '../src/ol/format.js';\r\nimport {\r\n  Tile as TileLayer,\r\n  VectorImage as VectorImageLayer,\r\n} from '../src/ol/layer.js';\r\nimport {Vector as VectorSource, XYZ} from '../src/ol/source.js';\r\n\r\nconst dragAndDropInteraction = new DragAndDrop({\r\n  formatConstructors: [GPX, GeoJSON, IGC, KML, TopoJSON],\r\n});\r\n\r\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\r\nconst attributions =\r\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\r\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\r\n\r\nconst map = new Map({\r\n  interactions: defaultInteractions().extend([dragAndDropInteraction]),\r\n  layers: [\r\n    new TileLayer({\r\n      source: new XYZ({\r\n        attributions: attributions,\r\n        url:\r\n          'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=' + key,\r\n        maxZoom: 20,\r\n      }),\r\n    }),\r\n  ],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 2,\r\n  }),\r\n});\r\n\r\ndragAndDropInteraction.on('addfeatures', function (event) {\r\n  const vectorSource = new VectorSource({\r\n    features: event.features,\r\n  });\r\n  map.addLayer(\r\n    new VectorImageLayer({\r\n      source: vectorSource,\r\n    })\r\n  );\r\n  map.getView().fit(vectorSource.getExtent());\r\n});\r\n\r\nconst displayFeatureInfo = function (pixel) {\r\n  const features = [];\r\n  map.forEachFeatureAtPixel(pixel, function (feature) {\r\n    features.push(feature);\r\n  });\r\n  if (features.length > 0) {\r\n    const info = [];\r\n    let i, ii;\r\n    for (i = 0, ii = features.length; i < ii; ++i) {\r\n      info.push(features[i].get('name'));\r\n    }\r\n    document.getElementById('info').innerHTML = info.join(', ') || '&nbsp';\r\n  } else {\r\n    document.getElementById('info').innerHTML = '&nbsp;';\r\n  }\r\n};\r\n\r\nmap.on('pointermove', function (evt) {\r\n  if (evt.dragging) {\r\n    return;\r\n  }\r\n  const pixel = map.getEventPixel(evt.originalEvent);\r\n  displayFeatureInfo(pixel);\r\n});\r\n\r\nmap.on('click', function (evt) {\r\n  displayFeatureInfo(evt.pixel);\r\n});\r\n"],"sourceRoot":""}