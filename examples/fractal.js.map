{"version":3,"sources":["webpack:///./fractal.js"],"names":["radius","cos30","Math","cos","PI","rise","sin","run","triangle","feature","layer","source","features","layers","target","view","center","zoom","injectNodes","startNode","const","endNode","next","start","point","end","dx","dy","firstNode","r","sqrt","a","atan2","secondNode","thirdNode","updateTimer","depthInput","document","getElementById","update","depth","geometry","clone","graph","coordinates","length","level","node","coordsToGraph","getCoordinates","i","let","graphToCoords","innerHTML","setCoordinates","setGeometry","makeFractal","Number","value","onchange","window","clearTimeout","setTimeout"],"mappings":"2FAAA,yDAOMA,EAAS,IACTC,EAAQC,KAAKC,IAAID,KAAKE,GAAK,GAE3BC,EAAOL,EADCE,KAAKI,IAAIJ,KAAKE,GAAK,GAE3BG,EAAMP,EAASC,EAEfO,EAAW,IAAI,IAAW,CAC9B,CAAC,EAAGR,GACJ,CAACO,GAAMF,GACP,EAAEE,GAAMF,GACR,CAAC,EAAGL,KAGAS,EAAU,IAAI,IAAQD,GAEtBE,EAAQ,IAAI,IAAY,CAC5BC,OAAQ,IAAI,IAAa,CACvBC,SAAU,CAACH,OAIH,IAAI,IAAI,CAClBI,OAAQ,CAACH,GACTI,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAqBV,SAASC,EAAYC,GACnBC,IAAMC,EAAUF,EAAUG,KAEpBC,EAAQJ,EAAUK,MAClBC,EAAMN,EAAUG,KAAKE,MACrBE,EAAKD,EAAI,GAAKF,EAAM,GACpBI,EAAKF,EAAI,GAAKF,EAAM,GAGpBK,EAAY,CAChBJ,MAAO,CAACD,EAAM,GAAKG,EAAK,EAAGH,EAAM,GAAKI,EAAK,IAIvCE,EAAI3B,KAAK4B,KAAKJ,EAAKA,EAAKC,EAAKA,IAAO,EAAI1B,GACxC8B,EAAI7B,KAAK8B,MAAML,EAAID,GAAMxB,KAAKE,GAAK,EACnC6B,EAAa,CACjBT,MAAO,CAACD,EAAM,GAAKM,EAAI3B,KAAKC,IAAI4B,GAAIR,EAAM,GAAKM,EAAI3B,KAAKI,IAAIyB,KAIxDG,EAAY,CAChBV,MAAO,CAACC,EAAI,GAAKC,EAAK,EAAGD,EAAI,GAAKE,EAAK,IAGzCR,EAAUG,KAAOM,EACjBA,EAAUN,KAAOW,EACjBA,EAAWX,KAAOY,EAClBA,EAAUZ,KAAOD,EAyBnBD,IAMIe,EANEC,EAAaC,SAASC,eAAe,SAE3C,SAASC,KAxET,SAAqBC,GAGnB,IAFApB,IAAMqB,EAAWjC,EAASkC,QACpBC,EA8CR,SAAuBC,GAKrB,IAJAxB,IAAMuB,EAAQ,CACZnB,MAAOoB,EAAY,IAEfC,EAASD,EAAYC,OAClBC,EAAQ,EAAGC,EAAOJ,EAAOG,EAAQD,EAAS,IAAKC,EACtDC,EAAKzB,KAAO,CACVE,MAAOoB,EAAYE,EAAQ,IAE7BC,EAAOA,EAAKzB,KAEd,OAAOqB,EAzDOK,CAAcP,EAASQ,kBAC5BC,EAAI,EAAGA,EAAIV,IAASU,EAE3B,IADAC,IAAIJ,EAAOJ,EACJI,EAAKzB,MAAM,CAChBF,IAAME,EAAOyB,EAAKzB,KAClBJ,EAAY6B,GACZA,EAAOzB,EAGXF,IAAMwB,EAmDR,SAAuBD,GAErB,IADAvB,IAAMwB,EAAc,CAACD,EAAMnB,OAClBuB,EAAOJ,EAAOO,EAAI,EAAGH,EAAKzB,KAAMyB,EAAOA,EAAKzB,OAAQ4B,EAC3DN,EAAYM,GAAKH,EAAKzB,KAAKE,MAE7B,OAAOoB,EAxDaQ,CAAcT,GAClCN,SAASC,eAAe,SAASe,UAAYT,EAAYC,OACzDJ,EAASa,eAAeV,GACxBnC,EAAQ8C,YAAYd,GA2DpBe,CAAYC,OAAOrB,EAAWsB,QAShCtB,EAAWuB,SAAW,WACpBC,OAAOC,aAAa1B,GACpBA,EAAcyB,OAAOE,WAAWvB,EAAQ,MAG1CA,M","file":"fractal.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\r\nimport LineString from '../src/ol/geom/LineString.js';\r\nimport Map from '../src/ol/Map.js';\r\nimport VectorLayer from '../src/ol/layer/Vector.js';\r\nimport VectorSource from '../src/ol/source/Vector.js';\r\nimport View from '../src/ol/View.js';\r\n\r\nconst radius = 10e6;\r\nconst cos30 = Math.cos(Math.PI / 6);\r\nconst sin30 = Math.sin(Math.PI / 6);\r\nconst rise = radius * sin30;\r\nconst run = radius * cos30;\r\n\r\nconst triangle = new LineString([\r\n  [0, radius],\r\n  [run, -rise],\r\n  [-run, -rise],\r\n  [0, radius],\r\n]);\r\n\r\nconst feature = new Feature(triangle);\r\n\r\nconst layer = new VectorLayer({\r\n  source: new VectorSource({\r\n    features: [feature],\r\n  }),\r\n});\r\n\r\nconst map = new Map({\r\n  layers: [layer],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 1,\r\n  }),\r\n});\r\n\r\nfunction makeFractal(depth) {\r\n  const geometry = triangle.clone();\r\n  const graph = coordsToGraph(geometry.getCoordinates());\r\n  for (let i = 0; i < depth; ++i) {\r\n    let node = graph;\r\n    while (node.next) {\r\n      const next = node.next;\r\n      injectNodes(node);\r\n      node = next;\r\n    }\r\n  }\r\n  const coordinates = graphToCoords(graph);\r\n  document.getElementById('count').innerHTML = coordinates.length;\r\n  geometry.setCoordinates(coordinates);\r\n  feature.setGeometry(geometry);\r\n}\r\n\r\nfunction injectNodes(startNode) {\r\n  const endNode = startNode.next;\r\n\r\n  const start = startNode.point;\r\n  const end = startNode.next.point;\r\n  const dx = end[0] - start[0];\r\n  const dy = end[1] - start[1];\r\n\r\n  // first point at 1/3 along the segment\r\n  const firstNode = {\r\n    point: [start[0] + dx / 3, start[1] + dy / 3],\r\n  };\r\n\r\n  // second point at peak of _/\\_\r\n  const r = Math.sqrt(dx * dx + dy * dy) / (2 * cos30);\r\n  const a = Math.atan2(dy, dx) + Math.PI / 6;\r\n  const secondNode = {\r\n    point: [start[0] + r * Math.cos(a), start[1] + r * Math.sin(a)],\r\n  };\r\n\r\n  // third point at 2/3 along the segment\r\n  const thirdNode = {\r\n    point: [end[0] - dx / 3, end[1] - dy / 3],\r\n  };\r\n\r\n  startNode.next = firstNode;\r\n  firstNode.next = secondNode;\r\n  secondNode.next = thirdNode;\r\n  thirdNode.next = endNode;\r\n}\r\n\r\nfunction coordsToGraph(coordinates) {\r\n  const graph = {\r\n    point: coordinates[0],\r\n  };\r\n  const length = coordinates.length;\r\n  for (let level = 0, node = graph; level < length - 1; ++level) {\r\n    node.next = {\r\n      point: coordinates[level + 1],\r\n    };\r\n    node = node.next;\r\n  }\r\n  return graph;\r\n}\r\n\r\nfunction graphToCoords(graph) {\r\n  const coordinates = [graph.point];\r\n  for (let node = graph, i = 1; node.next; node = node.next, ++i) {\r\n    coordinates[i] = node.next.point;\r\n  }\r\n  return coordinates;\r\n}\r\n\r\nconst depthInput = document.getElementById('depth');\r\n\r\nfunction update() {\r\n  makeFractal(Number(depthInput.value));\r\n}\r\n\r\nlet updateTimer;\r\n\r\n/**\r\n * Regenerate fractal on depth change.  Change events are debounced so updates\r\n * only occur every 200ms.\r\n */\r\ndepthInput.onchange = function () {\r\n  window.clearTimeout(updateTimer);\r\n  updateTimer = window.setTimeout(update, 200);\r\n};\r\n\r\nupdate();\r\n"],"sourceRoot":""}